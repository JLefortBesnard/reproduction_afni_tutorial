echo auto-generated by afni_proc.py, Thu Feb  2 11:07:45 2023
auto-generated by afni_proc.py, Thu Feb  2 11:07:45 2023
echo (version 7.51, January 24, 2023)
(version 7.51, January 24, 2023)
echo execution started: `date`
date
execution started: Thu Feb  2 11:07:45 AM CET 2023
afni -ver
Precompiled binary linux_openmp_64: Jan 24 2023 (Version AFNI_23.0.02 'Commodus')
afni_history -check_date 14 Nov 2022
-- is current: afni_history as new as: 14 Nov 2022
               most recent entry is:   24 Jan 2023
if ( 0 ) then
if ( 0 > 0 ) then
set subj = FT
endif
set output_dir = FT.results
if ( -d FT.results ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir -p FT.results
mkdir FT.results/stimuli
cp FT/AV1_vis.txt FT/AV2_aud.txt FT.results/stimuli
3dcopy FT/FT_anat+orig FT.results/FT_anat
++ 3dcopy: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
3dcopy /home/jlefortb/abin/TT_N27+tlrc.HEAD FT.results/TT_N27+tlrc.HEAD
++ 3dcopy: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
3dTcat -prefix FT.results/pb00.FT.r01.tcat FT/FT_epi_r1+orig[2..$]
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.1 s
3dTcat -prefix FT.results/pb00.FT.r02.tcat FT/FT_epi_r2+orig[2..$]
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.1 s
3dTcat -prefix FT.results/pb00.FT.r03.tcat FT/FT_epi_r3+orig[2..$]
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.1 s
set tr_counts = ( 150 150 150 )
cd FT.results
@radial_correlate -nfirst 0 -polort 3 -do_clean yes -rdir radcor.pb00.tcat pb00.FT.r01.tcat+orig.HEAD pb00.FT.r02.tcat+orig.HEAD pb00.FT.r03.tcat+orig.HEAD
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.1 s
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.1 s
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.1 s
++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
-- detrend -polort 3, new eset = det.r01
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 211200 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 10595 vectors are constant

-- running correlation on dataset pb00.FT.r01.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (120.8 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
---- done

++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
-- detrend -polort 3, new eset = det.r02
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 211200 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 13565 vectors are constant

-- running correlation on dataset pb00.FT.r02.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (120.8 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
---- done

++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
-- detrend -polort 3, new eset = det.r03
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 211200 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 14644 vectors are constant

-- running correlation on dataset pb00.FT.r03.tcat+orig.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (120.8 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
---- done

++ have do_clean, cleaning up...

find_variance_lines.tcsh -polort 3 -nerode 2 -rdir vlines.pb00.tcat pb00.FT.r01.tcat+orig.HEAD pb00.FT.r02.tcat+orig.HEAD pb00.FT.r03.tcat+orig.HEAD
tee out.vlines.pb00.tcat.txt
++ have nslices : 33 33 33
++ copying pb00.FT.r01.tcat+orig.HEAD[0..$] to ts.0.orig.r01.nii.gz
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 3.0 s
++ copying pb00.FT.r02.tcat+orig.HEAD[0..$] to ts.0.orig.r02.nii.gz
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 3.0 s
++ copying pb00.FT.r03.tcat+orig.HEAD[0..$] to ts.0.orig.r03.nii.gz
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 3.0 s
++ creating automask from first dset
++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ts.0.orig.r01.nii.gz
++ Forming automask
 + Fixed clip level = 668.020630
 + Used gradual clip level = 549.536255 .. 743.616333
 + Number voxels above clip level = 64498
 + Clustering voxels ...
 + Largest cluster has 64031 voxels
 + Clustering voxels ...
 + Largest cluster has 63777 voxels
 + Filled   418 voxels in small holes; now have 64195 voxels
 + Filled     4 voxels in large holes; now have 64199 voxels
 + Clustering voxels ...
 + Largest cluster has 64199 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 146997 voxels
 + Mask now has 64203 voxels
++ 64203 voxels in the mask [out of 211200: 30.40%]
++ first  15 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first   9 y-planes are zero [from A]
++ last    1 y-planes are zero [from P]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ Output dataset ./mask.nii.gz
++ CPU time = 0.000000 sec

-- will apply mask mask.nii.gz
++ eroding mask.nii.gz by 2 voxels
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 44697 survived, 166503 were zero
++ writing result mask.nii.gz...
++ Output dataset ./mask.nii.gz

++ requiring 5 voxels in mask columns
++ 3dLocalstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Number of voxels in mask = 44697
++ Neighborhood comprises 67 voxels
++ Start sub-brick [0]
++ Output dataset ./tmp.mask.col.count.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask.nii.gz

-- detrend -polort 3, new eset = ts.1.det.r01.nii.gz
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 211200 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 10595 vectors are constant

++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./tmp.stdev.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.0.orig.r01.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.1.scale.r01.nii.gz
++ 3dLocalstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Number of voxels in mask = 44478
++ Neighborhood comprises 67 voxels
++ Start sub-brick [0]
++ Output dataset ./proj.r01.nii.gz
++ Neighborhood definition (NN=3) accepted
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
++ Sorting clusters by size.
#
#  Cluster report 
#[ Dataset prefix      = proj.r01.nii.gz ]
#[ Threshold vol       = [0] 'MEAN' ]
#[ Supplement dat vol  = [0] 'MEAN' ]
#[ Option summary      = 2sided,-1,0.95,NN3 ]
#[ Threshold value(s)  = left-tail thr=-1.000000;  right-tail thr=0.950000 ]
#[ Aux. stat. info.    = not a stat! ]
#[ Nvoxel threshold    = 0;  Volume threshold = 0.000 ]
#[ Single voxel volume = 22.688 (microliters) ]
#[ Neighbor type, NN   = 3 ]
#[ Voxel datum type    = float ]
#[ Voxel dimensions    = 2.750 mm X 2.750 mm X 3.000 mm ]
#[ Coordinates Order   = RAI ]
#[ Mean and SEM based on signed voxel intensities ]
#
#Volume  CM RL  CM AP  CM IS  minRL  maxRL  minAP  maxAP  minIS  maxIS    Mean     SEM    Max Int  MI RL  MI AP  MI IS
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
    173   -1.3  -41.6   38.8   -2.7    0.1  -48.5  -34.8    6.3   72.3   0.9757  9.9e-04    0.989   -2.7  -40.3    6.3 
     56  -41.2  -14.1   22.8  -41.2  -41.2  -15.5  -12.8  -17.7   63.3   0.9665   0.0016   0.9785  -41.2  -12.8  -17.7 
     19   -8.2  -65.0   33.3   -8.2   -8.2  -65.0  -65.0    6.3   60.3        1        0        1   -8.2  -65.0    6.3 
     18  -27.4  -59.5   31.8  -27.4  -27.4  -59.5  -59.5    6.3   57.3   0.9706  2.9e-05   0.9706  -27.4  -59.5    6.3 
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
#   266  -11.9  -38.8   34.6                                             0.9751  8.7e-04                             
  -2.70  -40.30   30.35
 -41.20  -12.80   30.35
  -8.20  -65.00   30.35
 -27.40  -59.50   30.35
-- detrend -polort 3, new eset = ts.1.det.r02.nii.gz
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 211200 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 13565 vectors are constant

++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./tmp.stdev.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.0.orig.r02.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.1.scale.r02.nii.gz
++ 3dLocalstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Number of voxels in mask = 44478
++ Neighborhood comprises 67 voxels
++ Start sub-brick [0]
++ Output dataset ./proj.r02.nii.gz
++ Neighborhood definition (NN=3) accepted
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
++ Sorting clusters by size.
#
#  Cluster report 
#[ Dataset prefix      = proj.r02.nii.gz ]
#[ Threshold vol       = [0] 'MEAN' ]
#[ Supplement dat vol  = [0] 'MEAN' ]
#[ Option summary      = 2sided,-1,0.95,NN3 ]
#[ Threshold value(s)  = left-tail thr=-1.000000;  right-tail thr=0.950000 ]
#[ Aux. stat. info.    = not a stat! ]
#[ Nvoxel threshold    = 0;  Volume threshold = 0.000 ]
#[ Single voxel volume = 22.688 (microliters) ]
#[ Neighbor type, NN   = 3 ]
#[ Voxel datum type    = float ]
#[ Voxel dimensions    = 2.750 mm X 2.750 mm X 3.000 mm ]
#[ Coordinates Order   = RAI ]
#[ Mean and SEM based on signed voxel intensities ]
#
#Volume  CM RL  CM AP  CM IS  minRL  maxRL  minAP  maxAP  minIS  maxIS    Mean     SEM    Max Int  MI RL  MI AP  MI IS
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
    238   -1.2  -42.4   38.9   -2.7    0.1  -51.3  -34.8    6.3   72.3   0.9919  8.2e-04        1   -2.7  -40.3    6.3 
     79  -40.4  -14.6   25.0  -41.2  -38.4  -15.5  -12.8  -17.7   63.3   0.9978  3.3e-04        1  -41.2  -15.5  -17.7 
     19   -8.2  -65.0   33.3   -8.2   -8.2  -65.0  -65.0    6.3   60.3   0.9999        0   0.9999   -8.2  -65.0    6.3 
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
#   336  -10.8  -37.1   35.3                                             0.9937  6.0e-04                             
  -2.70  -40.30   30.35
 -41.20  -15.50   30.35
  -8.20  -65.00   30.35
-- detrend -polort 3, new eset = ts.1.det.r03.nii.gz
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 211200 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 14644 vectors are constant

++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./tmp.stdev.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.0.orig.r03.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.1.scale.r03.nii.gz
++ 3dLocalstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Number of voxels in mask = 44478
++ Neighborhood comprises 67 voxels
++ Start sub-brick [0]
++ Output dataset ./proj.r03.nii.gz
++ Neighborhood definition (NN=3) accepted
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
++ Sorting clusters by size.
#
#  Cluster report 
#[ Dataset prefix      = proj.r03.nii.gz ]
#[ Threshold vol       = [0] 'MEAN' ]
#[ Supplement dat vol  = [0] 'MEAN' ]
#[ Option summary      = 2sided,-1,0.95,NN3 ]
#[ Threshold value(s)  = left-tail thr=-1.000000;  right-tail thr=0.950000 ]
#[ Aux. stat. info.    = not a stat! ]
#[ Nvoxel threshold    = 0;  Volume threshold = 0.000 ]
#[ Single voxel volume = 22.688 (microliters) ]
#[ Neighbor type, NN   = 3 ]
#[ Voxel datum type    = float ]
#[ Voxel dimensions    = 2.750 mm X 2.750 mm X 3.000 mm ]
#[ Coordinates Order   = RAI ]
#[ Mean and SEM based on signed voxel intensities ]
#
#Volume  CM RL  CM AP  CM IS  minRL  maxRL  minAP  maxAP  minIS  maxIS    Mean     SEM    Max Int  MI RL  MI AP  MI IS
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
    283   -1.2  -42.2   39.1   -2.7    0.1  -51.3  -34.8    6.3   75.3   0.9899  8.7e-04        1   -2.7  -40.3    6.3 
    146  -39.5  -18.6   27.9  -41.2  -38.4  -23.8  -15.5  -17.7   63.3   0.9907    0.001        1  -41.2  -18.3  -17.7 
     25  -35.7  -10.0   30.3  -35.7  -35.7  -10.0  -10.0   -5.7   66.3   0.9604        0   0.9604  -35.7  -10.0   -5.7 
     19   -2.7  -67.8   33.3   -2.7   -2.7  -67.8  -67.8    6.3   60.3        1        0        1   -2.7  -67.8    6.3 
     19   -8.2  -65.0   33.3   -8.2   -8.2  -65.0  -65.0    6.3   60.3     0.96        0     0.96   -8.2  -65.0    6.3 
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
#   492  -14.6  -35.4   34.9                                             0.9878  7.1e-04                             
  -2.70  -40.30   30.35
 -41.20  -18.30   30.35
 -35.70  -10.00   30.35
  -2.70  -67.80   30.35
  -8.20  -65.00   30.35

-- evaluating intersection...
++ 3dMean: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Neighborhood definition (NN=3) accepted
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
++ Sorting clusters by size.
#
#  Cluster report 
#[ Dataset prefix      = proj.min.nii.gz ]
#[ Threshold vol       = [0] 'MEAN' ]
#[ Supplement dat vol  = [0] 'MEAN' ]
#[ Option summary      = 2sided,-1,0.95,NN3 ]
#[ Threshold value(s)  = left-tail thr=-1.000000;  right-tail thr=0.950000 ]
#[ Aux. stat. info.    = not a stat! ]
#[ Nvoxel threshold    = 0;  Volume threshold = 0.000 ]
#[ Single voxel volume = 22.688 (microliters) ]
#[ Neighbor type, NN   = 3 ]
#[ Voxel datum type    = float ]
#[ Voxel dimensions    = 2.750 mm X 2.750 mm X 3.000 mm ]
#[ Coordinates Order   = RAI ]
#[ Mean and SEM based on signed voxel intensities ]
#
#Volume  CM RL  CM AP  CM IS  minRL  maxRL  minAP  maxAP  minIS  maxIS    Mean     SEM    Max Int  MI RL  MI AP  MI IS
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
    173   -1.3  -41.6   38.8   -2.7    0.1  -48.5  -34.8    6.3   72.3   0.9757  9.9e-04    0.989   -2.7  -40.3    6.3 
     28  -41.2  -15.5   22.8  -41.2  -41.2  -15.5  -15.5  -17.7   63.3   0.9546  1.3e-05   0.9546  -41.2  -15.5  -17.7 
     19   -8.2  -65.0   33.3   -8.2   -8.2  -65.0  -65.0    6.3   60.3     0.96        0     0.96   -8.2  -65.0    6.3 
#------  -----  -----  -----  -----  -----  -----  -----  -----  -----  -------  -------  -------  -----  -----  -----
#   220   -6.9  -40.3   36.3                                             0.9716  9.4e-04                             
  -2.70  -40.30   30.35
 -41.20  -15.50   30.35
  -8.20  -65.00   30.35
++ Check about making images
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Symbol k using predefined value
++ Symbol x using predefined value
++ Symbol y using predefined value
++ Output dataset ./__tmp_dash_line.nii.gz
++ olay_alpha has known value: Yes
++ My command:
   @chauffeur_afni -ulay var.1.scale.r01.nii.gz -olay __tmp_dash_line.nii.gz -pbar_posonly -cbar Reds_and_Blues_Inv -func_range 1 -set_subbricks 0 0 0 -thr_olay 0.5 -olay_alpha Yes -olay_boxed Yes -set_dicom_xyz -2.70 -40.30 30.35 -opacity 9 -blowup 4 -no_cor -no_axi -montx 1 -monty 1 -prefix img_inter_01 -set_xhairs OFF -label_mode 0

++ Using AFNI ver : AFNI_23.0.02
++ chauffeur ver  : 6.52
** ERROR: Xvfb -- not found in path -- program fails

++ DONE (bad exit): check for errors

++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Symbol k using predefined value
++ Symbol x using predefined value
++ Symbol y using predefined value
++ Output dataset ./__tmp_dash_line.nii.gz
++ olay_alpha has known value: Yes
++ My command:
   @chauffeur_afni -ulay var.1.scale.r01.nii.gz -olay __tmp_dash_line.nii.gz -pbar_posonly -cbar Reds_and_Blues_Inv -func_range 1 -set_subbricks 0 0 0 -thr_olay 0.5 -olay_alpha Yes -olay_boxed Yes -set_dicom_xyz -41.20 -15.50 30.35 -opacity 9 -blowup 4 -no_cor -no_axi -montx 1 -monty 1 -prefix img_inter_02 -set_xhairs OFF -label_mode 0

++ Using AFNI ver : AFNI_23.0.02
++ chauffeur ver  : 6.52
** ERROR: Xvfb -- not found in path -- program fails

++ DONE (bad exit): check for errors

++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Symbol k using predefined value
++ Symbol x using predefined value
++ Symbol y using predefined value
++ Output dataset ./__tmp_dash_line.nii.gz
++ olay_alpha has known value: Yes
++ My command:
   @chauffeur_afni -ulay var.1.scale.r01.nii.gz -olay __tmp_dash_line.nii.gz -pbar_posonly -cbar Reds_and_Blues_Inv -func_range 1 -set_subbricks 0 0 0 -thr_olay 0.5 -olay_alpha Yes -olay_boxed Yes -set_dicom_xyz -8.20 -65.00 30.35 -opacity 9 -blowup 4 -no_cor -no_axi -montx 1 -monty 1 -prefix img_inter_03 -set_xhairs OFF -label_mode 0

++ Using AFNI ver : AFNI_23.0.02
++ chauffeur ver  : 6.52
** ERROR: Xvfb -- not found in path -- program fails

++ DONE (bad exit): check for errors

++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Symbol k using predefined value
++ Symbol x using predefined value
++ Symbol y using predefined value
++ Output dataset ./__tmp_dash_line.nii.gz
++ olay_alpha has known value: Yes
++ My command:
   @chauffeur_afni -ulay var.1.scale.r01.nii.gz -olay __tmp_dash_line.nii.gz -pbar_posonly -cbar Reds_and_Blues_Inv -func_range 1 -set_subbricks 0 0 0 -thr_olay 0.5 -olay_alpha Yes -olay_boxed Yes -set_dicom_xyz -2.70 -40.30 30.35 -opacity 9 -blowup 4 -no_cor -no_axi -montx 1 -monty 1 -prefix img_r01_01 -set_xhairs OFF -label_mode 0

++ Using AFNI ver : AFNI_23.0.02
++ chauffeur ver  : 6.52
** ERROR: Xvfb -- not found in path -- program fails

++ DONE (bad exit): check for errors

++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Symbol k using predefined value
++ Symbol x using predefined value
++ Symbol y using predefined value
++ Output dataset ./__tmp_dash_line.nii.gz
++ olay_alpha has known value: Yes
++ My command:
   @chauffeur_afni -ulay var.1.scale.r01.nii.gz -olay __tmp_dash_line.nii.gz -pbar_posonly -cbar Reds_and_Blues_Inv -func_range 1 -set_subbricks 0 0 0 -thr_olay 0.5 -olay_alpha Yes -olay_boxed Yes -set_dicom_xyz -41.20 -12.80 30.35 -opacity 9 -blowup 4 -no_cor -no_axi -montx 1 -monty 1 -prefix img_r01_02 -set_xhairs OFF -label_mode 0

++ Using AFNI ver : AFNI_23.0.02
++ chauffeur ver  : 6.52
** ERROR: Xvfb -- not found in path -- program fails

++ DONE (bad exit): check for errors

++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Symbol k using predefined value
++ Symbol x using predefined value
++ Symbol y using predefined value
++ Output dataset ./__tmp_dash_line.nii.gz
++ olay_alpha has known value: Yes
++ My command:
   @chauffeur_afni -ulay var.1.scale.r01.nii.gz -olay __tmp_dash_line.nii.gz -pbar_posonly -cbar Reds_and_Blues_Inv -func_range 1 -set_subbricks 0 0 0 -thr_olay 0.5 -olay_alpha Yes -olay_boxed Yes -set_dicom_xyz -8.20 -65.00 30.35 -opacity 9 -blowup 4 -no_cor -no_axi -montx 1 -monty 1 -prefix img_r01_03 -set_xhairs OFF -label_mode 0

++ Using AFNI ver : AFNI_23.0.02
++ chauffeur ver  : 6.52
** ERROR: Xvfb -- not found in path -- program fails

++ DONE (bad exit): check for errors

++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
++ Symbol k using predefined value
++ Symbol x using predefined value
++ Symbol y using predefined value
++ Output dataset ./__tmp_dash_line.nii.gz
++ olay_alpha has known value: Yes
++ My command:
   @chauffeur_afni -ulay var.1.scale.r01.nii.gz -olay __tmp_dash_line.nii.gz -pbar_posonly -cbar Reds_and_Blues_Inv -func_range 1 -set_subbricks 0 0 0 -thr_olay 0.5 -olay_alpha Yes -olay_boxed Yes -set_dicom_xyz -27.40 -59.50 30.35 -opacity 9 -blowup 4 -no_cor -no_axi -montx 1 -monty 1 -prefix img_r01_04 -set_xhairs OFF -label_mode 0

++ Using AFNI ver : AFNI_23.0.02
++ chauffeur ver  : 6.52
** ERROR: Xvfb -- not found in path -- program fails

++ DONE (bad exit): check for errors

2dcat: No match.
rm: No match.
++ have do_clean, removing time series...


== found questionable regions across inputs: 4 3 5
   found questionable intersected regions  : 3

=============== bad_coords.inter.txt ===============
  -2.70  -40.30   30.35
 -41.20  -15.50   30.35
  -8.20  -65.00   30.35

=============== bad_coords.r01.txt ===============
  -2.70  -40.30   30.35
 -41.20  -12.80   30.35
  -8.20  -65.00   30.35
 -27.40  -59.50   30.35

=============== bad_coords.r02.txt ===============
  -2.70  -40.30   30.35
 -41.20  -15.50   30.35
  -8.20  -65.00   30.35

=============== bad_coords.r03.txt ===============
  -2.70  -40.30   30.35
 -41.20  -18.30   30.35
 -35.70  -10.00   30.35
  -2.70  -67.80   30.35
  -8.20  -65.00   30.35

touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.FT.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ 64203 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.FT.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ 64323 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.FT.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ 64476 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.05)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 150 150 150 -index_to_run_tr 324
set minoutrun = 03
set minouttr = 24
echo min outlier: run 03, TR 24
tee out.min_outlier.txt
min outlier: run 03, TR 24
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.FT.r01.tshift pb00.FT.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ updating time offset to 0
end
3dTshift -tzero 0 -quintic -prefix pb01.FT.r02.tshift pb00.FT.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ updating time offset to 0
end
3dTshift -tzero 0 -quintic -prefix pb01.FT.r03.tshift pb00.FT.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ updating time offset to 0
end
3dbucket -prefix vr_base_min_outlier pb01.FT.r03.tshift+orig[24]
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
3dLocalUnifize -input vr_base_min_outlier+orig -prefix vr_base_min_outlier_unif
++ Start 3dLocalUnifize work
++ Making working directory: ./__wdir_LocalUni_JiXpmgk3Eqw
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.0 s
++ 3dLocalstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Number of voxels in automask = 64508
++ Neighborhood comprises 123 voxels
++ Start sub-brick [0]
++ Output dataset ./dset_01_lu.nii.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./dset_02_rat.nii.gz
++ Apply filter threshold to scaled image: 1.5
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./dset_03_filt.nii.gz
++ 3dcopy: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]

+* Removing the working dir: '__wdir_LocalUni_JiXpmgk3Eqw'


++ DONE! View the finished, locally-unifized product:
     /home/jlefortb/reproduction_afni/afni_tuto_w_afni/FT.results/vr_base_min_outlier_unif

align_epi_anat.py -anat2epi -anat FT_anat+orig -save_skullstrip -suffix _al_junk -epi vr_base_min_outlier_unif+orig -epi_base 0 -epi_strip 3dAutomask -cost lpc+ZZ -giant_move -check_flip -volreg off -tshift off
#++ align_epi_anat version: 1.63
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier_unif+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier_unif+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./FT_anat+orig
#++ Multi-cost is lpc+ZZ
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier_unif*
#Script is running:
  \rm -f ./__tt_FT_anat*
#Script is running (command trimmed):
  3dcopy ./FT_anat+orig ./FT_anat_unflipped+orig
++ 3dcopy: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./FT_anat_unflipped+orig -prefix ./FT_anat_unflipped_ns
#Script is running (command trimmed):
  3dinfo ./FT_anat_unflipped_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /home/jlefortb/reproduction_afni/afni_tuto_w_afni/FT.results/FT_anat_unflipped_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier_unif+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /home/jlefortb/reproduction_afni/afni_tuto_w_afni/FT.results/vr_base_min_outlier_unif+orig is not oblique
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_unif_ts ./vr_base_min_outlier_unif+orig'[0]'
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./vr_base_min_outlier_unif_ts_ns ./__tt_vr_base_min_outlier_unif_ts+orig
++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset ./__tt_vr_base_min_outlier_unif_ts+orig
++ Forming automask
 + Fixed clip level = 0.500100
 + Used gradual clip level = 0.499050 .. 0.500400
 + Number voxels above clip level = 64066
 + Clustering voxels ...
 + Largest cluster has 64066 voxels
 + Clustering voxels ...
 + Largest cluster has 64045 voxels
 + Filled   314 voxels in small holes; now have 64359 voxels
 + Clustering voxels ...
 + Largest cluster has 64358 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 146840 voxels
 + Mask now has 64360 voxels
++ 64360 voxels in the mask [out of 211200: 30.47%]
++ first  15 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first   9 y-planes are zero [from A]
++ last    1 y-planes are zero [from P]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./vr_base_min_outlier_unif_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./vr_base_min_outlier_unif_ts_ns+orig
#++ Applying threshold of 1.145530 on /home/jlefortb/reproduction_afni/afni_tuto_w_afni/FT.results/vr_base_min_outlier_unif_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./vr_base_min_outlier_unif_ts_ns_wt -a ./vr_base_min_outlier_unif_ts_ns+orig -expr 'min(1,(a/1.145530))'
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././vr_base_min_outlier_unif_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -wtprefix ./FT_anat_unflipped_ns_al_junk_wtal -weight ./vr_base_min_outlier_unif_ts_ns_wt+orig -source ./FT_anat_unflipped_ns+orig -prefix ./FT_anat_al_junk -base ./vr_base_min_outlier_unif_ts_ns+orig -cmass -1Dmatrix_save ./FT_anat_al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.937500 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./FT_anat_unflipped_ns+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_unif_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 2049699 voxels in -source_automask+2
++ largeness ==> set -twobest 29
++ Zero-pad: ybot=1 ytop=9
++ Zero-pad: zbot=10 ztop=10
++ 64360 voxels [16.9%] in weight mask
++ Output dataset ./FT_anat_unflipped_ns_al_junk_wtal+orig.BRIK
++ Number of points for matching = 64360
++ Local correlation: blok type = 'TOHD(14.6557)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 39.341 45.910 25.052 (index)
 + source center of mass = 149.230 104.780 89.537 (index)
 + source-target CM = 1.938 2.142 -8.932 (xyz)
 + estimated center of mass shifts = 1.938 2.142 -8.932
++ shift param auto-range: -67.8..71.7 -76.4..80.7 -59.0..41.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -8.062210 .. 11.937790  center = 1.937790
 + Range param#2 [y-shift] = -7.858459 .. 12.141541  center = 2.141541
 + Range param#3 [z-shift] = -18.932373 .. 1.067627  center = -8.932373
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -38.062210 .. 41.937790  center = 1.937790
 + Range param#2 [y-shift] = -37.858459 .. 42.141541  center = 2.141541
 + Range param#3 [z-shift] = -48.932373 .. 31.067627  center = -8.932373
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -38.062 ..   41.938
 +       y-shift =  -37.858 ..   42.142
 +       z-shift =  -48.932 ..   31.068
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.9375 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 2049699 [out of 11468800] voxels
 + base mask has 82206 [out of 381600] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.00
 + - Smoothing source; radius=3.00
 + !source mask fill: ubot=57 usiz=463
 + - copying weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 252.63 .. 985.189; base clip 0.342518 .. 1.13827
 +  - versus source range 0.706254 .. 927.429; base range 0 .. 1.38671
 + 55713 total points stored in 109 'TOHD(14.9596)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+191)*64 params [top5=*o+-.]:#o+o-.-o-.--.$ + - best 88 costs found:
   o= 0 v= 0.939858:   1.94   2.14  -8.93   0.00   0.00   0.00  [grid]
   o= 1 v= 1.011027:   8.60  -4.53  -2.27  -7.50   7.50   7.50  [grid]
   o= 2 v= 1.022973:   8.60  -4.53  -2.27   7.50   7.50   7.50  [grid]
   o= 3 v= 1.079363:  -4.73  -4.53  -2.27   7.50   7.50  -7.50  [grid]
   o= 4 v= 1.133520:  -4.73  -4.53  -2.27  -7.50   7.50  -7.50  [grid]
   o= 5 v= 1.172588:   8.60  -4.53  -2.27  -7.50  -7.50   7.50  [grid]
   o= 6 v= 1.186102:   8.60   8.81  -2.27   7.50  -7.50   7.50  [grid]
   o= 7 v= 1.192391:   8.60  -4.53  -2.27   7.50   7.50  30.00  [grid]
   o= 8 v= 1.193619:  -4.73  -4.53  -2.27   7.50  -7.50  -7.50  [grid]
   o= 9 v= 1.197875:   8.60  -4.53  -2.27   7.50  -7.50   7.50  [grid]
   o=10 v= 1.210662:   8.60  -4.53  -2.27  -7.50   7.50  30.00  [grid]
   o=11 v= 1.228520:  -4.73   8.81  -2.27  -7.50  -7.50  -7.50  [grid]
   o=12 v= 1.262260:   4.35 -11.95   1.00   5.34   3.42  10.89  [rand]
   o=13 v= 1.265573:   8.60   8.81  -2.27  -7.50  -7.50   7.50  [grid]
   o=14 v= 1.281628:   6.02  -4.08  -1.14  -4.32  22.85  18.95  [rand]
   o=15 v= 1.300430:   6.02  -4.08  -1.14   4.32  22.85  18.95  [rand]
   o=16 v= 1.306102:   8.60   8.81  -2.27   7.50   7.50   7.50  [grid]
   o=17 v= 1.311111:   4.35 -11.95   1.00  -5.34   3.42  10.89  [rand]
   o=18 v= 1.313197:   8.60  -4.53  -2.27   7.50  -7.50  30.00  [grid]
   o=19 v= 1.326362:  -4.73   8.81  -2.27   7.50  -7.50  -7.50  [grid]
   o=20 v= 1.331857:   8.60   8.81  -2.27  -7.50  -7.50  30.00  [grid]
   o=21 v= 1.337160:  -4.73  -4.53  -2.27  -7.50  -7.50  -7.50  [grid]
   o=22 v= 1.342108:  16.14  -7.31  -4.09  15.99  13.53  29.93  [rand]
   o=23 v= 1.345906:  -4.73  -4.53 -15.60  -7.50   7.50  -7.50  [grid]
   o=24 v= 1.347636:   8.60   8.81  -2.27  -7.50   7.50  30.00  [grid]
   o=25 v= 1.351462:  -4.73  -4.53 -15.60   7.50   7.50  -7.50  [grid]
   o=26 v= 1.358490:   8.60  -4.53 -15.60   7.50   7.50   7.50  [grid]
   o=27 v= 1.358692:  16.14  -7.31  -4.09 -15.99  13.53  29.93  [rand]
   o=28 v= 1.363343:  -0.47 -11.95   1.00   5.34   3.42 -10.89  [rand]
   o=29 v= 1.366180: -12.27  -7.31  -4.09  15.99  13.53 -29.93  [rand]
   o=30 v= 1.370604:  -4.73  -4.53  -2.27   7.50   7.50 -30.00  [grid]
   o=31 v= 1.372773:  -4.73  -4.53  -2.27   7.50   7.50   7.50  [grid]
   o=32 v= 1.374275:  -4.73  -4.53  -2.27  30.00   7.50  -7.50  [grid]
   o=33 v= 1.383366:   8.60   8.81  -2.27  -7.50   7.50   7.50  [grid]
   o=34 v= 1.384397:  -4.73   8.81 -15.60  -7.50   7.50  -7.50  [grid]
   o=35 v= 1.385301:  -0.47 -11.95   1.00   5.34   3.42  10.89  [rand]
   o=36 v= 1.396584:   8.60  -4.53  -2.27  30.00   7.50   7.50  [grid]
   o=37 v= 1.399510:  -4.73   8.81  -2.27  -7.50   7.50  -7.50  [grid]
   o=38 v= 1.402560:   8.60  -4.53  -2.27 -30.00   7.50   7.50  [grid]
   o=39 v= 1.402590:   8.60  -4.53  -2.27  -7.50   7.50  -7.50  [grid]
   o=40 v= 1.409496:  -4.73  -4.53  -2.27  -7.50   7.50   7.50  [grid]
   o=41 v= 1.411924:  -4.73  -4.53  -2.27  -7.50   7.50 -30.00  [grid]
   o=42 v= 1.414512:   8.60  -4.53  -2.27   7.50   7.50  -7.50  [grid]
   o=43 v= 1.422972:  -0.47 -11.95   1.00  -5.34   3.42 -10.89  [rand]
   o=44 v= 1.430209:   4.35 -11.95   1.00   5.34  -3.42  10.89  [rand]
   o=45 v= 1.430819:   8.60  -4.53 -15.60  -7.50   7.50   7.50  [grid]
   o=46 v= 1.433207:   8.60  -4.53  -2.27  -7.50  -7.50  30.00  [grid]
   o=47 v= 1.453568:   8.60   8.81 -15.60   7.50   7.50   7.50  [grid]
   o=48 v= 1.458626:  -2.14  -4.08  -1.14   4.32  22.85 -18.95  [rand]
   o=49 v= 1.465085:   8.60   8.81 -15.60  -7.50   7.50   7.50  [grid]
   o=50 v= 1.466541:  -4.73   8.81  -2.27   7.50  -7.50 -30.00  [grid]
   o=51 v= 1.474932:  -4.73   8.81 -15.60   7.50   7.50  -7.50  [grid]
   o=52 v= 1.485596:  -2.14  -4.08  -1.14  -4.32  22.85 -18.95  [rand]
   o=53 v= 1.491224:  -4.73  -4.53  -2.27   7.50  -7.50   7.50  [grid]
   o=54 v= 1.491230:   8.60   8.81  -2.27   7.50   7.50  30.00  [grid]
   o=55 v= 1.492264:   8.60  -4.53  -2.27  30.00   7.50  30.00  [grid]
   o=56 v= 1.494552:   8.60   8.81  -2.27   7.50  -7.50  30.00  [grid]
   o=57 v= 1.495837:   8.60  -4.53  -2.27   7.50  30.00   7.50  [grid]
   o=58 v= 1.502621:   4.35 -11.95   1.00  -5.34  -3.42  10.89  [rand]
   o=59 v= 1.505208:  -4.73  -4.53  -2.27  30.00  -7.50  -7.50  [grid]
   o=60 v= 1.510884:  -4.73  -4.53  -2.27   7.50  -7.50 -30.00  [grid]
   o=61 v= 1.513613:  -4.73  -4.53  -2.27  -7.50  -7.50 -30.00  [grid]
   o=62 v= 1.514048:   8.60  -4.53  -2.27  -7.50  -7.50  -7.50  [grid]
   o=63 v= 1.518275:   4.35 -11.95   1.00  -5.34   3.42 -10.89  [rand]
   o=64 v= 1.521589: -12.27  -7.31  -4.09 -15.99  13.53 -29.93  [rand]
   o=65 v= 1.526537:  -4.73  -4.53  -2.27  30.00   7.50   7.50  [grid]
   o=66 v= 1.527744:   8.60  -4.53  -2.27  -7.50  30.00   7.50  [grid]
   o=67 v= 1.533832:  -0.47 -11.95   1.00  -5.34   3.42  10.89  [rand]
   o=68 v= 1.539245:  -4.73   8.81  -2.27  -7.50  -7.50   7.50  [grid]
   o=69 v= 1.539294:  -0.47 -11.95   1.00   5.34  -3.42 -10.89  [rand]
   o=70 v= 1.539424:  -4.73   8.81  -2.27   7.50   7.50  -7.50  [grid]
   o=71 v= 1.539526:  -4.73   8.81  -2.27  -7.50  -7.50 -30.00  [grid]
   o=72 v= 1.546064:  -0.47 -11.95   1.00   5.34  -3.42  10.89  [rand]
   o=73 v= 1.548485: -12.27  -7.31 -13.77  15.99  13.53 -29.93  [rand]
   o=74 v= 1.555515:   8.60   8.81  -2.27   7.50  -7.50  -7.50  [grid]
   o=75 v= 1.568533:  12.19  -6.70   6.70  -7.51  21.00  38.82  [rand]
   o=76 v= 1.573471:   4.35 -11.95   1.00   5.34   3.42 -10.89  [rand]
   o=77 v= 1.579819:  12.19  -6.70   6.70   7.51  21.00  38.82  [rand]
   o=78 v= 1.581144:   8.60  -4.53  -2.27  30.00  -7.50   7.50  [grid]
   o=79 v= 1.584889:   8.60  -4.53  -2.27   7.50  -7.50  -7.50  [grid]
   o=80 v= 1.592864:  -0.47 -11.95   1.00  -5.34  -3.42 -10.89  [rand]
   o=81 v= 1.596233:  -4.73  -4.53  -2.27 -30.00   7.50  -7.50  [grid]
   o=82 v= 1.603212:  -4.73  -4.53  -2.27  -7.50  30.00  -7.50  [grid]
   o=83 v= 1.608988:   8.60  -4.53  -2.27 -30.00   7.50  -7.50  [grid]
   o=84 v= 1.610827:   8.60   8.81  -2.27 -30.00  -7.50   7.50  [grid]
   o=85 v= 1.611414:   8.60   8.81  -2.27  30.00  -7.50   7.50  [grid]
   o=86 v= 1.613236:   8.60  -4.53  -2.27 -30.00   7.50  30.00  [grid]
   o=87 v= 1.615326:  -4.73  -4.53  -2.27   7.50  30.00  -7.50  [grid]
 + - A little optimization:*[#16324=0.882804] *[#16337=0.879327] *[#16340=0.877862] *[#16345=0.874611] *[#16346=0.869452] *[#16347=0.862617] *[#16353=0.861767] *[#16354=0.8589] *[#16359=0.858812] *[#16360=0.858509] *[#16362=0.857793] *[#16365=0.857314] .*[#16397=0.852092] *[#16400=0.847251] *[#16403=0.846139] *[#16409=0.844132] *[#16411=0.843711] .......................................................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.857314:   2.55   1.92  -5.77  -0.19   3.63   2.28  [grid]  [f=50]
  *o= 1 v= 0.843711:   5.24  -0.93  -4.67  -0.60   5.13   8.38  [grid]  [f=49]
   o= 2 v= 0.847171:   5.04  -0.73  -5.60  -0.18   6.58   6.96  [grid]  [f=44]
   o= 3 v= 0.882612:   0.78  -0.78  -6.62   4.74   6.98  -5.95  [grid]  [f=69]
   o= 4 v= 0.880426:  -2.24  -0.51  -6.63  -0.69   5.70  -8.18  [grid]  [f=45]
   o= 5 v= 0.855670:   3.77   0.58  -4.83   1.23   1.67   5.96  [grid]  [f=55]
   o= 6 v= 0.849960:   5.24   1.73  -5.49   0.09   2.98   9.19  [grid]  [f=62]
   o= 7 v= 0.850046:   6.78  -1.12  -5.03   0.70   5.72   9.88  [grid]  [f=53]
   o= 8 v= 0.873140:  -0.87  -1.55  -5.29  -0.92   5.34  -5.77  [grid]  [f=46]
   o= 9 v= 0.860242:   7.65  -0.09  -6.10   3.81   5.63  11.24  [grid]  [f=41]
   o=10 v= 0.854606:   7.19   0.54  -5.84   0.98   5.28  11.74  [grid]  [f=71]
   o=11 v= 0.874464:  -1.24   0.24  -6.28  -0.47   4.75  -6.88  [grid]  [f=53]
   o=12 v= 0.844766:   4.85   0.83  -5.31   0.35   4.45   7.77  [rand]  [f=44]
   o=13 v= 0.846006:   4.55  -0.55  -4.65  -0.44   4.67   7.15  [grid]  [f=49]
   o=14 v= 0.845716:   5.08  -0.86  -4.54  -1.20   5.17   7.68  [rand]  [f=52]
   o=15 v= 0.844226:   5.94  -0.14  -5.50   0.67   6.09   9.45  [rand]  [f=52]
   o=16 v= 0.849224:   6.76  -0.13  -4.59   1.16   4.59  10.09  [grid]  [f=45]
   o=17 v= 0.845722:   5.87  -0.32  -5.25   0.60   5.87   9.78  [rand]  [f=56]
   o=18 v= 0.875395:   9.32   0.37  -5.42   2.00   4.36  14.91  [grid]  [f=59]
   o=19 v= 0.867580:   0.19   1.79  -5.84  -1.42   3.02  -2.77  [grid]  [f=63]
   o=20 v= 0.847098:   6.06   1.03  -6.30   0.68   6.13   9.04  [grid]  [f=58]
   o=21 v= 0.869830:  -0.32  -0.95  -5.41  -0.68   4.43  -4.73  [grid]  [f=51]
   o=22 v= 0.856154:   7.88  -0.32  -5.21   1.93   5.31  12.44  [rand]  [f=74]
   o=23 v= 0.880492:  -1.69  -1.04  -6.71  -0.70   6.91  -7.11  [grid]  [f=41]
   o=24 v= 0.914033:  11.43   0.24  -4.99   2.48   7.66  20.29  [grid]  [f=69]
   o=25 v= 0.875449:  -0.26  -0.66  -6.64  -0.32   7.63  -3.98  [grid]  [f=53]
   o=26 v= 0.848709:   6.69  -0.58  -5.40   2.35   6.10   8.85  [grid]  [f=58]
   o=27 v= 0.866980:   9.03  -0.18  -5.53   2.53   6.73  13.17  [rand]  [f=73]
   o=28 v= 0.875030:   0.89  -1.85  -5.03   2.14   5.73  -4.91  [rand]  [f=59]
   o=29 v= 0.928519:  -4.53   1.46  -7.43  -0.22   3.76 -14.56  [rand]  [f=83]
   o=30 v= 0.872251:  -1.12  -0.05  -5.45  -0.68   3.94  -5.72  [grid]  [f=64]
   o=31 v= 0.852180:   2.68  -1.11  -4.99  -1.29   5.29   3.30  [grid]  [f=47]
   o=32 v= 0.868965:   0.34  -0.15  -6.06  -2.21   8.39  -0.95  [grid]  [f=48]
   o=33 v= 0.844921:   4.13  -0.09  -5.13  -0.53   6.14   7.29  [grid]  [f=43]
   o=34 v= 0.877530:  -0.49   0.43  -7.18   2.04   6.36  -6.82  [grid]  [f=67]
   o=35 v= 0.845106:   4.54  -0.12  -5.53  -0.11   6.20   7.25  [rand]  [f=72]
   o=36 v= 0.866105:   3.12  -0.05  -5.36   2.92   3.70   1.52  [grid]  [f=57]
   o=37 v= 0.886281:  -2.30   1.05  -6.35  -2.37   4.19  -8.24  [grid]  [f=40]
   o=38 v= 0.856524:   7.58  -0.46  -5.05   2.15   7.24  11.00  [grid]  [f=56]
   o=39 v= 0.855380:   3.99  -2.09  -4.80  -2.57   7.25   4.94  [grid]  [f=48]
   o=40 v= 0.853201:   3.45  -1.56  -4.45  -2.07   7.14   3.45  [grid]  [f=45]
   o=41 v= 0.882800:  -2.03   1.16  -6.02  -1.26   4.50  -7.69  [grid]  [f=65]
   o=42 v= 0.846342:   5.15   0.42  -4.89   0.82   4.64   7.31  [grid]  [f=57]
   o=43 v= 0.873089:  -0.48  -1.18  -5.27   0.35   5.39  -6.15  [rand]  [f=49]
   o=44 v= 0.851506:   4.16  -1.17  -5.98  -0.32   7.04   7.08  [rand]  [f=52]
   o=45 v= 0.857563:   6.33  -0.84  -5.26  -1.81   6.09  11.06  [grid]  [f=47]
   o=46 v= 0.907746:  10.78   0.34  -4.86   1.23   5.74  19.54  [grid]  [f=64]
   o=47 v= 0.857225:   7.06   0.26  -6.40   2.60   7.17  10.04  [grid]  [f=46]
   o=48 v= 0.874450:  -0.98  -1.29  -6.24  -1.03   6.59  -5.24  [rand]  [f=50]
   o=49 v= 0.848594:   3.12   1.03  -5.66  -1.50   5.27   5.48  [grid]  [f=52]
   o=50 v= 0.884756:  -1.74   1.14  -6.93  -2.13   4.76  -7.45  [grid]  [f=78]
   o=51 v= 0.868306:  -0.42   0.07  -5.66  -2.09   5.75  -3.18  [grid]  [f=53]
   o=52 v= 0.873326:   0.45  -1.43  -6.19   1.20   7.27  -4.71  [rand]  [f=57]
   o=53 v= 0.860068:   1.52   0.13  -5.50  -0.69   4.23   1.91  [grid]  [f=46]
   o=54 v= 0.880325:   7.90  -2.32  -6.09   1.04   9.26  12.54  [grid]  [f=61]
   o=55 v= 0.849977:   7.32  -0.02  -6.11   1.60   5.66  11.26  [grid]  [f=72]
   o=56 v= 0.847731:   6.72   0.57  -5.15   1.94   4.56  10.54  [grid]  [f=73]
   o=57 v= 0.856737:   7.36  -0.38  -6.02   0.68   6.46  11.58  [grid]  [f=56]
   o=58 v= 0.853119:   5.04  -0.10  -3.62  -0.66   2.46   8.47  [rand]  [f=60]
   o=59 v= 0.880330:  -0.39   1.27  -4.88  -0.34  -0.56  -4.83  [grid]  [f=54]
   o=60 v= 0.881208:  -1.92   0.74  -6.30  -1.34   3.90  -7.64  [grid]  [f=66]
   o=61 v= 0.920510:  -2.28  -0.74  -6.10   0.69   0.05 -11.29  [grid]  [f=82]
   o=62 v= 0.864271:   3.28   0.72  -5.20   0.27   1.80   2.09  [grid]  [f=62]
   o=63 v= 0.871676:  -0.07  -1.05  -5.47   0.66   5.96  -4.43  [rand]  [f=53]
   o=64 v= 0.871426:   0.14  -1.48  -5.74   0.43   6.84  -4.75  [rand]  [f=67]
   o=65 v= 0.867796:   1.77  -1.13  -5.52   2.77   7.39  -3.47  [grid]  [f=63]
   o=66 v= 0.854836:   3.67  -1.92  -4.71  -2.14   7.34   4.13  [grid]  [f=54]
   o=67 v= 0.848096:   3.73  -1.26  -5.12  -0.72   5.74   5.47  [rand]  [f=50]
   o=68 v= 0.869204:   0.21   1.00  -5.79  -0.84   3.76  -3.61  [grid]  [f=49]
   o=69 v= 0.889300:  -0.14  -1.57  -4.73   1.48   3.32  -7.19  [rand]  [f=57]
   o=70 v= 0.872655:  -1.15   0.35  -5.67  -1.83   4.52  -4.44  [grid]  [f=50]
   o=71 v= 0.877314:  -0.65   1.20  -6.15  -0.95   2.72  -5.09  [grid]  [f=60]
   o=72 v= 0.849626:   4.88  -0.01  -5.57   1.95   3.17   5.83  [rand]  [f=58]
   o=73 v= 0.911848:  -3.74  -0.13  -7.25  -0.65   5.98 -12.55  [rand]  [f=71]
   o=74 v= 0.864449:   0.93   1.51  -5.75   0.45   3.78  -2.22  [grid]  [f=67]
   o=75 v= 0.884495:   9.66   0.78  -6.46   2.49   7.24  15.46  [rand]  [f=77]
   o=76 v= 0.852755:   3.50  -1.19  -4.61  -1.51   7.50   3.58  [rand]  [f=46]
   o=77 v= 0.934479:  12.53   0.57  -4.72   1.67   7.73  22.91  [rand]  [f=76]
   o=78 v= 0.853818:   6.05   0.48  -5.62   3.23   4.68   8.08  [grid]  [f=56]
   o=79 v= 0.866945:   1.82   0.48  -5.96   3.35   3.32  -3.00  [grid]  [f=42]
   o=80 v= 0.860081:   2.49  -1.46  -3.24   0.10   7.14  -0.50  [rand]  [f=69]
   o=81 v= 0.862692:   2.67  -1.85  -4.21   1.36   7.12  -1.64  [grid]  [f=57]
   o=82 v= 0.873463:  -0.75  -0.65  -5.88  -1.27   5.72  -4.11  [grid]  [f=54]
   o=83 v= 0.854761:   3.06  -2.43  -4.65  -1.59   8.81   2.15  [grid]  [f=60]
   o=84 v= 0.853896:   5.65   1.65  -4.77  -0.56   3.28  10.27  [grid]  [f=58]
   o=85 v= 0.845585:   5.36   0.51  -5.00   1.10   3.08   7.76  [grid]  [f=60]
   o=86 v= 0.852639:   7.46  -0.23  -5.43   1.87   5.11  11.75  [grid]  [f=59]
   o=87 v= 0.865586:   1.48  -0.35  -5.61   1.74   6.22  -3.98  [grid]  [f=57]
 + - saving # 1 for use with twobest
 + - skip #15 for twobest: too close to set # 1
 + - skip #12 for twobest: too close to set # 1
 + - skip #33 for twobest: too close to set # 1
 + - skip #35 for twobest: too close to set # 1
 + - skip #85 for twobest: too close to set # 1
 + - skip #14 for twobest: too close to set # 1
 + - skip #17 for twobest: too close to set # 1
 + - skip #13 for twobest: too close to set # 1
 + - skip #42 for twobest: too close to set # 1
 + - skip #20 for twobest: too close to set # 1
 + - skip # 2 for twobest: too close to set # 1
 + - skip #56 for twobest: too close to set # 1
 + - skip #67 for twobest: too close to set # 1
 + - skip #49 for twobest: too close to set # 1
 + - skip #26 for twobest: too close to set # 1
 + - skip #16 for twobest: too close to set # 1
 + - skip #72 for twobest: too close to set # 1
 + - skip # 6 for twobest: too close to set # 1
 + - skip #55 for twobest: too close to set # 1
 + - skip # 7 for twobest: too close to set # 1
 + - skip #44 for twobest: too close to set # 1
 + - skip #31 for twobest: too close to set #12
 + - skip #86 for twobest: too close to set # 1
 + - skip #76 for twobest: too close to set #12
 + - skip #58 for twobest: too close to set # 1
 + - skip #40 for twobest: too close to set #12
 + - skip #78 for twobest: too close to set # 1
 + - skip #84 for twobest: too close to set # 1
 + - skip #10 for twobest: too close to set # 1
 + - skip #83 for twobest: too close to set #67
 + - skip #66 for twobest: too close to set # 1
 + - skip #39 for twobest: too close to set # 1
 + - skip # 5 for twobest: too close to set # 1
 + - skip #22 for twobest: too close to set # 1
 + - skip #38 for twobest: too close to set # 1
 + - skip #57 for twobest: too close to set # 1
 + - skip #47 for twobest: too close to set # 1
 + - skip # 0 for twobest: too close to set #67
 + - skip #45 for twobest: too close to set # 1
 + - skip #53 for twobest: too close to set #67
 + - skip #80 for twobest: too close to set #31
 + - skip # 9 for twobest: too close to set # 1
 + - skip #81 for twobest: too close to set #83
 + - skip #62 for twobest: too close to set #67
 + - skip #74 for twobest: too close to set #53
 + - skip #87 for twobest: too close to set #80
 + - skip #36 for twobest: too close to set #67
 + - skip #79 for twobest: too close to set #80
 + - skip #27 for twobest: too close to set #15
 + - skip #19 for twobest: too close to set #80
 + - skip #65 for twobest: too close to set #80
 + - skip #51 for twobest: too close to set #80
 + - skip #32 for twobest: too close to set #31
 + - skip #68 for twobest: too close to set #80
 + - skip #21 for twobest: too close to set #80
 + - skip #64 for twobest: too close to set #80
 + - skip #63 for twobest: too close to set #80
 + - skip #30 for twobest: too close to set #81
 + - skip #70 for twobest: too close to set #80
 + - skip #43 for twobest: too close to set #74
 + - skip # 8 for twobest: too close to set #81
 + - skip #52 for twobest: too close to set #80
 + - skip #82 for twobest: too close to set #80
 + - skip #48 for twobest: too close to set #81
 + - skip #11 for twobest: too close to set #87
 + - skip #28 for twobest: too close to set #80
 + - skip #18 for twobest: too close to set #56
 + - skip #25 for twobest: too close to set #80
 + - skip #71 for twobest: too close to set #81
 + - skip #34 for twobest: too close to set #87
 + - skip #54 for twobest: too close to set # 1
 + - skip #59 for twobest: too close to set #74
 + - skip # 4 for twobest: too close to set #87
 + - skip #23 for twobest: too close to set #87
 + - skip #60 for twobest: too close to set #87
 + - skip # 3 for twobest: too close to set #81
 + - skip #41 for twobest: too close to set #87
 + - skip #75 for twobest: too close to set #55
 + - skip #50 for twobest: too close to set #87
 + - skip #37 for twobest: too close to set #87
 + - skip #69 for twobest: too close to set #87
 + - skip #46 for twobest: too close to set #75
 + - skip #73 for twobest: too close to set # 4
 + - skip #24 for twobest: too close to set #46
 + - skip #61 for twobest: too close to set #60
 + - skip #29 for twobest: too close to set #73
 + - skip #77 for twobest: too close to set #46
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 2 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.33
 + - Smoothing source; radius=2.33
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 252.46 .. 995.165; base clip 0.343227 .. 1.16668
 +  - versus source range 0.00430817 .. 927.364; base range 0 .. 1.4331
 + 54987 total points stored in 108 'TOHD(14.8402)' bloks (0 duplicates)
*[#21445=0.840047] *[#21457=0.829929] *[#21462=0.661885] *[#21463=0.612934] *[#21464=0.603933] *[#21465=0.601308] *[#21466=0.600369] *[#21467=0.600045] *[#21468=0.597365] *[#21469=0.596731] *[#21470=0.59469] *[#21472=0.593986] *[#21474=0.587554] *[#21479=0.584408] *[#21480=0.584153] *[#21481=0.58093] *[#21482=0.575077] *[#21492=0.574782] *[#21493=0.5746] *[#21494=0.574065] *[#21495=0.573515] *[#21498=0.572231] *[#21499=0.571454] *[#21500=0.570142] *[#21503=0.568435] *[#21504=0.56621] *[#21505=0.563483] *[#21506=0.560756] *[#21508=0.55588] *[#21509=0.552444] *[#21510=0.543276] *[#21513=0.538084] *[#21514=0.533271] *[#21517=0.53317] *[#21519=0.529167] *[#21520=0.523287] *[#21521=0.514857] *[#21524=0.512335] *[#21525=0.506362] *[#21526=0.503516] *[#21528=0.502618] *[#21529=0.502094] *[#21530=0.501328] *[#21531=0.500219] *[#21532=0.499317] *[#21534=0.496236] *[#21535=0.492065] *[#21536=0.491323] *[#21537=0.483666] *[#21540=0.481359] 
 + - param set #1 has cost=0.481359 [o=1 t=0]
 + -- Parameters = 3.1657 -0.4294 3.5323 0.3239 0.4485 2.0939 0.9578 0.9029 0.9545 -0.0044 -0.0275 -0.0266
 + - param set #2 has cost=0.521867 [o=-1 t=-1]
 + -- Parameters = 1.9158 -0.4445 2.1668 -0.1186 0.2143 -0.9824 0.9561 0.9187 0.9812 0.0034 0.0079 0.0052
++ Start refinement #2 on 2 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.81
 + - Smoothing source; radius=1.81
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 256.722 .. 1002.28; base clip 0.343938 .. 1.19323
 +  - versus source range 0 .. 928.208; base range 0 .. 1.46982
 + 53744 total points stored in 105 'TOHD(14.7676)' bloks (0 duplicates)
*[#21673=0.480715] *[#21674=0.479914] *[#21675=0.478919] *[#21678=0.478476] *[#21679=0.477624] *[#21680=0.476779] *[#21681=0.476027] *[#21682=0.475594] *[#21683=0.475098] *[#21684=0.474124] *[#21690=0.473337] *[#21692=0.472171] *[#21693=0.471495] *[#21698=0.470022] *[#21699=0.469943] *[#21701=0.46943] *[#21704=0.468228] *[#21706=0.467217] *[#21708=0.467162] *[#21709=0.466217] *[#21710=0.465339] *[#21711=0.464645] *[#21712=0.463778] *[#21713=0.462656] *[#21714=0.460588] *[#21715=0.457532] *[#21716=0.454925] *[#21721=0.452835] *[#21723=0.450151] *[#21725=0.449738] *[#21727=0.44963] *[#21728=0.448731] *[#21731=0.448543] *[#21733=0.447697] *[#21734=0.446622] *[#21735=0.445895] *[#21741=0.445546] *[#21743=0.445053] *[#21744=0.444052] *[#21745=0.443801] *[#21748=0.442786] *[#21749=0.44216] *[#21751=0.441934] *[#21752=0.441765] *[#21753=0.441725] *[#21754=0.441485] 
 + - param set #1 has cost=0.441485 [o=1 t=0]
 + -- Parameters = 3.2335 -1.2412 5.4500 -0.8540 3.1578 2.4478 0.9772 0.9065 0.8847 -0.0278 -0.0401 -0.0107
*[#21843=0.440169] *[#21844=0.437741] *[#21845=0.437014] *[#21846=0.435449] *[#21848=0.435191] *[#21855=0.434324] *[#21857=0.43303] *[#21860=0.432314] 
 + - param set #2 has cost=0.432314 [o=-1 t=-1]
 + -- Parameters = 2.2878 -1.8559 5.5517 0.0532 4.5178 -0.1648 0.9822 0.9121 0.8802 0.0131 -0.0024 0.0075
++ Start refinement #3 on 2 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.41
 + - Smoothing source; radius=1.41
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 258.232 .. 1005.35; base clip 0.344466 .. 1.21014
 +  - versus source range 0 .. 928.809; base range 0 .. 1.4912
 + 54449 total points stored in 109 'TOHD(14.7235)' bloks (0 duplicates)
 + - param set #1 has cost=0.438905 [o=1 t=0]
 + -- Parameters = 3.1622 -1.3163 5.5721 -0.6160 3.7781 2.0966 0.9765 0.9230 0.8788 -0.0266 -0.0478 -0.0052
*[#22006=0.432305] *[#22007=0.431988] *[#22009=0.431582] *[#22010=0.431342] *[#22011=0.430921] *[#22012=0.430734] *[#22018=0.430473] *[#22019=0.430208] *[#22020=0.429843] *[#22023=0.429447] *[#22028=0.428917] *[#22029=0.428846] *[#22030=0.428824] *[#22031=0.428744] *[#22036=0.42867] *[#22038=0.428387] *[#22039=0.428173] *[#22041=0.427963] *[#22044=0.427504] *[#22045=0.427114] *[#22046=0.42696] *[#22047=0.426464] *[#22052=0.42624] *[#22053=0.426106] *[#22054=0.425908] *[#22057=0.425775] *[#22059=0.425467] *[#22060=0.424933] *[#22061=0.424646] *[#22066=0.424579] *[#22069=0.424288] *[#22070=0.424173] *[#22071=0.424003] *[#22072=0.423835] *[#22073=0.423711] *[#22075=0.42357] *[#22076=0.423538] *[#22078=0.423218] *[#22079=0.423083] *[#22082=0.42292] 
 + - param set #2 has cost=0.422920 [o=-1 t=-1]
 + -- Parameters = 2.4410 -1.9643 6.3825 -0.0275 6.2813 0.0964 0.9847 0.9356 0.8563 0.0124 -0.0079 0.0295
 + - Total coarse refinement net CPU time = 0.0 s; 636 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 3 cases
 +  - histogram: source clip 258.499 .. 1013.23; base clip 0.344466 .. 1.21014
 +  - versus source range 0 .. 929.682; base range 0 .. 1.49956
 + 53740 total points stored in 107 'TOHD(14.6898)' bloks (0 duplicates)
 + - cost(#1)=0.438193 * [o=1 t=0]
 + -- Parameters = 3.1622 -1.3163 5.5721 -0.6160 3.7781 2.0966 0.9765 0.9230 0.8788 -0.0266 -0.0478 -0.0052
*[#22088=0.420596]  + - cost(#2)=0.420596 * [o=-1 t=-1]
 + -- Parameters = 2.4410 -1.9643 6.3825 -0.0275 6.2813 0.0964 0.9847 0.9356 0.8563 0.0124 -0.0079 0.0295
 + - cost(#3)=0.924594   [o=-2 t=-2]
 + -- Parameters = 1.9378 2.1415 -8.9324 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 3 cases
 + - cost(#1)=0.426964 * [o=1 t=0]
 + -- Parameters = 3.2816 -1.7856 6.1026 -0.9335 5.3855 2.0951 0.9835 0.9253 0.8621 -0.0265 -0.0491 0.0151
*[#22202=0.419375] *[#22225=0.417643] *[#22226=0.416548] *[#22229=0.415549] *[#22236=0.415152] *[#22237=0.415121] *[#22240=0.415085] *[#22243=0.414914] *[#22244=0.414568] *[#22249=0.414196] *[#22250=0.414134] *[#22252=0.413866] *[#22253=0.4134] *[#22254=0.413304] *[#22255=0.413024] *[#22257=0.412929] *[#22262=0.412176] *[#22265=0.411784] *[#22266=0.411394] *[#22267=0.410833] *[#22270=0.410686] *[#22271=0.409563] *[#22272=0.408011] *[#22275=0.407858] *[#22276=0.407076] *[#22279=0.405478] *[#22282=0.405101] *[#22287=0.404492] 
 + - cost(#2)=0.404492 * [o=-1 t=-1]
 + -- Parameters = 2.4988 -1.9448 6.4418 -0.3241 8.2185 0.0180 0.9892 0.9286 0.8667 0.0093 -0.0026 0.0517
 + - cost(#3)=0.461867   [o=-2 t=-2]
 + -- Parameters = 2.8347 -1.1539 4.9253 -0.3433 2.5432 1.3158 0.9740 0.8848 0.9150 0.0290 -0.0212 -0.0186
 + - case #2 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.404492
 + - Initial fine Parameters = 2.4988 -1.9448 6.4418 -0.3241 8.2185 0.0180 0.9892 0.9286 0.8667 0.0093 -0.0026 0.0517
*[#22501=0.401104] *[#22525=0.400234] *[#22529=0.399574] *[#22530=0.39921] *[#22532=0.399145] *[#22533=0.398117] *[#22534=0.396795] *[#22535=0.396337] *[#22536=0.39545] *[#22537=0.394384] *[#22538=0.394025] *[#22539=0.393163] *[#22542=0.392947] *[#22545=0.391865] *[#22548=0.391297] *[#22549=0.390853] *[#22550=0.3905] *[#22551=0.389759] *[#22552=0.389211] *[#22553=0.388622] *[#22556=0.388493] *[#22559=0.388047] *[#22560=0.387017] *[#22561=0.386452] *[#22562=0.386065] *[#22563=0.385476] *[#22565=0.385296] *[#22566=0.384917] *[#22567=0.384406] *[#22569=0.384317] *[#22570=0.383984] *[#22573=0.383557] *[#22576=0.382639] *[#22577=0.382425] *[#22578=0.381616] *[#22584=0.380938] *[#22587=0.380891] *[#22588=0.380105] *[#22589=0.379615] *[#22590=0.379025] *[#22591=0.378025] *[#22592=0.376666] *[#22593=0.376192] *[#22594=0.3761] *[#22595=0.37465] *[#22596=0.374513] *[#22600=0.374271] *[#22601=0.373663] *[#22602=0.373436] *[#22603=0.373057] *[#22604=0.372716] *[#22607=0.372572] *[#22612=0.372439] *[#22615=0.371394] *[#22616=0.371078] *[#22617=0.37075] *[#22618=0.36956] *[#22619=0.368052] *[#22620=0.368037] *[#22622=0.365883] *[#22623=0.36578] *[#22625=0.365736] *[#22627=0.364213] *[#22632=0.36326] *[#22637=0.362318] *[#22638=0.361525] *[#22639=0.360698] *[#22640=0.359613] *[#22641=0.358614] *[#22642=0.358257] *[#22643=0.358004] *[#22644=0.35788] *[#22645=0.356649] *[#22648=0.353604] *[#22653=0.35205] *[#22656=0.351078] *[#22665=0.350891] *[#22682=0.350817] *[#22687=0.350807] *[#22688=0.350637] *[#22691=0.350611] *[#22692=0.350581] *[#22703=0.350468] *[#22720=0.350467] *[#22731=0.350443] *[#22732=0.350428] *[#22736=0.350419] *[#22741=0.350411] *[#22743=0.350397] *[#22745=0.350392] *[#22752=0.350383] *[#22757=0.35037] *[#22770=0.350362] *[#22775=0.35036] *[#22782=0.350349] *[#22787=0.350345] 
 + - Finalish cost = 0.350345 ; 316 funcs
 + - ini Finalish Parameters = 2.2100 -3.8430 5.7933 -0.2126 11.1359 -0.3883 0.9817 0.9550 0.8787 0.0155 0.0070 0.1111
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 257.991 .. 1013.88; base clip 0.344466 .. 1.21014
 +  - versus source range 0 .. 929.682; base range 0 .. 1.49956
*[#22806=-0.196834] *[#22870=-0.200468] *[#22882=-0.201794] *[#22891=-0.202135] *[#22893=-0.202657] *[#22894=-0.204487] *[#22904=-0.205887] *[#22905=-0.205905] *[#22906=-0.206427] *[#22911=-0.206849] *[#22923=-0.208168] *[#22928=-0.209512] *[#22933=-0.210259] *[#22938=-0.21046] *[#22939=-0.21078] *[#22946=-0.211531] *[#22949=-0.211888] *[#22950=-0.213186] *[#22955=-0.214118] *[#22964=-0.214221] *[#22978=-0.214626] *[#22983=-0.215203] *[#22984=-0.215508] *[#22985=-0.215691] *[#22992=-0.216052] *[#22999=-0.216604] *[#23002=-0.216962] *[#23006=-0.21724] *[#23007=-0.217403] *[#23017=-0.217509] *[#23018=-0.217715] *[#23021=-0.217776] *[#23023=-0.217847] *[#23024=-0.21794] *[#23029=-0.217953] *[#23030=-0.218055] *[#23057=-0.21806] *[#23065=-0.21811] *[#23066=-0.218117] *[#23070=-0.218148] *[#23071=-0.218203] *[#23077=-0.21823] *[#23078=-0.21826] *[#23081=-0.218279] *[#23086=-0.218307] *[#23099=-0.218312] *[#23117=-0.218314] *[#23125=-0.218323] *[#23136=-0.218329] *[#23137=-0.218337] *[#23142=-0.21835] *[#23147=-0.218353] *[#23157=-0.218354] *[#23159=-0.218365] *[#23178=-0.218379] *[#23185=-0.218388] *[#23186=-0.218389] *[#23194=-0.218398] *[#23217=-0.218399] *[#23219=-0.218403] *[#23222=-0.218408] *[#23225=-0.218421] *[#23232=-0.218425] *[#23243=-0.218426] *[#23255=-0.218428] *[#23265=-0.21843] *[#23288=-0.218431] *[#23291=-0.218431] *[#23292=-0.218434] *[#23295=-0.218435] *[#23308=-0.218435] *[#23314=-0.218437] *[#23334=-0.218439] *[#23339=-0.218439] *[#23342=-0.21844] *[#23344=-0.218442] *[#23346=-0.218442] *[#23385=-0.218443] *[#23388=-0.218443] *[#23396=-0.218443] *[#23406=-0.218444] *[#23430=-0.218444] *[#23441=-0.218445] *[#23448=-0.218445] *[#23454=-0.218445] *[#23465=-0.218446] *[#23470=-0.218446] *[#23481=-0.218447] *[#23491=-0.218447] *[#23494=-0.218447] *[#23496=-0.218448] *[#23509=-0.218448] *[#23512=-0.218449] *[#23513=-0.21845] *[#23514=-0.21845] *[#23522=-0.21845] *[#23524=-0.21845] *[#23527=-0.218451] *[#23528=-0.218451] *[#23531=-0.218453] *[#23532=-0.218454] *[#23533=-0.218455] *[#23538=-0.218455] *[#23540=-0.218456] *[#23542=-0.218456] *[#23545=-0.218457] *[#23554=-0.218458] *[#23557=-0.218458] *[#23572=-0.218459] *[#23575=-0.218459] *[#23578=-0.21846] *[#23591=-0.21846] *[#23594=-0.218461] *[#23595=-0.218462] *[#23600=-0.218463] *[#23601=-0.218464] *[#23606=-0.218464] *[#23611=-0.218465] *[#23612=-0.218467] *[#23615=-0.218467] *[#23619=-0.218468] *[#23620=-0.21847] *[#23621=-0.21847] *[#23623=-0.21847] *[#23624=-0.218472] *[#23625=-0.218472] *[#23626=-0.218473] *[#23627=-0.218475] *[#23628=-0.218476] *[#23629=-0.218476] *[#23631=-0.218477] *[#23632=-0.218478] *[#23635=-0.218478] *[#23640=-0.21848] *[#23643=-0.218482] *[#23644=-0.218482] *[#23645=-0.218484] *[#23648=-0.218484] *[#23650=-0.218486] *[#23651=-0.218487] *[#23654=-0.218491] *[#23655=-0.218492] *[#23658=-0.218494] *[#23659=-0.218494] *[#23660=-0.218497] *[#23661=-0.218499] *[#23662=-0.2185] *[#23664=-0.2185] *[#23665=-0.218503] *[#23672=-0.218506] *[#23673=-0.218507] *[#23674=-0.218508] *[#23676=-0.218508] *[#23677=-0.21851] *[#23678=-0.21851] *[#23679=-0.218511] *[#23680=-0.218514] *[#23681=-0.218518] *[#23684=-0.21852] *[#23685=-0.218524] *[#23688=-0.218524] *[#23692=-0.218524] *[#23693=-0.218525] *[#23696=-0.218527] *[#23701=-0.218527] *[#23703=-0.218528] *[#23714=-0.218528] *[#23716=-0.218529] *[#23719=-0.21853] *[#23726=-0.21853] *[#23729=-0.218531] *[#23730=-0.218532] *[#23733=-0.218534] *[#23748=-0.218535] *[#23749=-0.218535] *[#23758=-0.218536] *[#23763=-0.218537] *[#23764=-0.218538] *[#23771=-0.218538] *[#23778=-0.218538] *[#23788=-0.218538] *[#23794=-0.218539] *[#23797=-0.21854] *[#23798=-0.21854] *[#23804=-0.218542] *[#23808=-0.218542] *[#23813=-0.218543] *[#23814=-0.218544] *[#23819=-0.218545] *[#23822=-0.218547] *[#23825=-0.218547] *[#23826=-0.218548] *[#23827=-0.21855] *[#23828=-0.218552] *[#23829=-0.218554] *[#23830=-0.218555] *[#23831=-0.218555] *[#23843=-0.218556] *[#23844=-0.218557] *[#23856=-0.218557] *[#23858=-0.218558] *[#23861=-0.218558] *[#23862=-0.218559] *[#23867=-0.218559] *[#23868=-0.21856] *[#23869=-0.218561] *[#23872=-0.218562] *[#23875=-0.218562] *[#23876=-0.218563] *[#23877=-0.218564] *[#23880=-0.218565] *[#23881=-0.218567] *[#23882=-0.218567] *[#23883=-0.218571] *[#23884=-0.218572] *[#23885=-0.218574] *[#23888=-0.218575] *[#23892=-0.218575] *[#23901=-0.218577] *[#23902=-0.218577] *[#23905=-0.218578] *[#23906=-0.218579] *[#23907=-0.21858] *[#23916=-0.218581] *[#23917=-0.218581] *[#23918=-0.218582] *[#23943=-0.218583] *[#23946=-0.218583] *[#23953=-0.218583] *[#23957=-0.218585] *[#23963=-0.218585] *[#23965=-0.218586] *[#23966=-0.218588] *[#23973=-0.218589] *[#23974=-0.218589] *[#23976=-0.218589] *[#23978=-0.21859] *[#23987=-0.21859] *[#23988=-0.218591] *[#23991=-0.218592] *[#23992=-0.218592] *[#23995=-0.218592] *[#23998=-0.218593] *[#24002=-0.218593] *[#24009=-0.218593] *[#24011=-0.218593] *[#24017=-0.218594] *[#24020=-0.218594] *[#24021=-0.218594] *[#24022=-0.218595] *[#24023=-0.218595] *[#24024=-0.218596] *[#24028=-0.218597] *[#24029=-0.218597] *[#24031=-0.218598] *[#24034=-0.218599] *[#24039=-0.218601] *[#24042=-0.218602] *[#24049=-0.218603] *[#24050=-0.218603] *[#24052=-0.218605] *[#24053=-0.218607] *[#24054=-0.218607] *[#24055=-0.21861] *[#24056=-0.21861] *[#24061=-0.218611] *[#24064=-0.218611] *[#24066=-0.218612] *[#24071=-0.218612] *[#24072=-0.218613] *[#24073=-0.218614] *[#24078=-0.218615] *[#24080=-0.218615] *[#24083=-0.218616] *[#24084=-0.218617] *[#24087=-0.218617] *[#24100=-0.218618] *[#24107=-0.218619] *[#24130=-0.21862] *[#24131=-0.21862] *[#24138=-0.218621] *[#24139=-0.218621] *[#24144=-0.218622] *[#24149=-0.218622] *[#24152=-0.218622] *[#24158=-0.218622] *[#24164=-0.218623] *[#24167=-0.218623] *[#24174=-0.218624] *[#24191=-0.218624] *[#24194=-0.218624] *[#24208=-0.218625] *[#24216=-0.218625] *[#24217=-0.218626] *[#24218=-0.218626] *[#24219=-0.218627] *[#24224=-0.218628] *[#24225=-0.218628] *[#24226=-0.218629] *[#24229=-0.21863] *[#24232=-0.21863] *[#24234=-0.21863] *[#24244=-0.218632] *[#24247=-0.218633] *[#24272=-0.218633] *[#24273=-0.218633] *[#24274=-0.218634] *[#24275=-0.218634] *[#24277=-0.218634] *[#24278=-0.218635] *[#24279=-0.218635] *[#24281=-0.218636] *[#24282=-0.218636] *[#24283=-0.218637] *[#24286=-0.218638] *[#24287=-0.218639] *[#24292=-0.218639] *[#24293=-0.218639] *[#24295=-0.21864] *[#24302=-0.218642] *[#24311=-0.218643] *[#24314=-0.218643] *[#24319=-0.218643] *[#24327=-0.218644] *[#24338=-0.218645] *[#24343=-0.218645] *[#24352=-0.218646] *[#24361=-0.218646] *[#24366=-0.218646] *[#24368=-0.218647] *[#24373=-0.218648] *[#24374=-0.218648] *[#24430=-0.218648] *[#24431=-0.218648] *[#24442=-0.218649] *[#24475=-0.218649] *[#24480=-0.218649] *[#24498=-0.218649] *[#24503=-0.218649] *[#24534=-0.218649] 
 + - Final    cost = -0.218649 ; 1740 funcs
 + Final fine fit Parameters:
       x-shift=  2.5325   y-shift= -3.2311   z-shift=  4.4965  ...  enorm=  6.0887 mm
       z-angle= -0.3047   x-angle=  9.9425   y-angle=  0.0893  ...  total=  9.9473 deg
       x-scale=  1.0060   y-scale=  0.9697   z-scale=  0.9257  ...  vol3D=  0.9030=(0.9665)^3 [base bigger than source]
     y/x-shear=  0.0149 z/x-shear= -0.0001 z/y-shear=  0.1111
[7m*+ WARNING:[0m Parameter z/y-shear =   0.11110 is close to edge of its search range  -0.11110 ..   0.11110
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 2.5325 -3.2311 4.4965 -0.3047 9.9425 0.0893 1.0060 0.9697 0.9257 0.0149 -0.0001 0.1111
++ Unloading unneeded data
++ Output dataset ./FT_anat_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./FT_anat_al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 55.7
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dLRflip -prefix ./__tt_FT_anat_lr_al_junk -overwrite ./FT_anat_unflipped_ns+orig
++ processing ./FT_anat_unflipped_ns+orig ...
#Script is running (command trimmed):
  3dAllineate -lpc+ZZ -weight ./vr_base_min_outlier_unif_ts_ns_wt+orig -source ./__tt_FT_anat_lr_al_junk+orig -prefix ./FT_anat_flip_al_junk -base ./vr_base_min_outlier_unif_ts_ns+orig -cmass -1Dmatrix_save ./FT_anat_flip__al_junk_mat.aff12.1D -master BASE -mast_dxyz 0.937500 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_FT_anat_lr_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_unif_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 2049699 voxels in -source_automask+2
++ largeness ==> set -twobest 29
++ Zero-pad: ybot=1 ytop=9
++ Zero-pad: zbot=10 ztop=10
++ 64360 voxels [16.9%] in weight mask
++ Number of points for matching = 64360
++ Local correlation: blok type = 'TOHD(14.6557)'
++ lpc+ parameters: hel=0.40 mi=0.20 nmi=0.20 crA=0.40 ov=0.40 [to be zeroed at Final iteration]
++ base center of mass = 39.341 45.910 25.052 (index)
 + source center of mass = 149.230 104.780 84.463 (index)
 + source-target CM = 7.011 2.142 -8.932 (xyz)
 + estimated center of mass shifts = 7.011 2.142 -8.932
++ shift param auto-range: -62.7..76.7 -76.4..80.7 -59.0..41.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -2.989075 .. 17.010925  center = 7.010925
 + Range param#2 [y-shift] = -7.858459 .. 12.141541  center = 2.141541
 + Range param#3 [z-shift] = -18.932373 .. 1.067627  center = -8.932373
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -32.989075 .. 47.010925  center = 7.010925
 + Range param#2 [y-shift] = -37.858459 .. 42.141541  center = 2.141541
 + Range param#3 [z-shift] = -48.932373 .. 31.067627  center = -8.932373
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -32.989 ..   47.011
 +       y-shift =  -37.858 ..   42.142
 +       z-shift =  -48.932 ..   31.068
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.9375 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Signed + Others =======
 + source mask has 2049699 [out of 11468800] voxels
 + base mask has 82206 [out of 381600] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=3.00
 + - Smoothing source; radius=3.00
 + !source mask fill: ubot=57 usiz=463
 + - copying weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 +  - histogram: source clip 252.642 .. 985.342; base clip 0.342518 .. 1.13827
 +  - versus source range 0.706254 .. 927.429; base range 0 .. 1.38671
 + 55713 total points stored in 109 'TOHD(14.9596)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+191)*64 params [top5=*o+-.]:#o+o-...o-..-+-$ + - best 88 costs found:
   o= 0 v= 0.948976:   7.01   2.14  -8.93   0.00   0.00   0.00  [grid]
   o= 1 v= 1.052190:  13.68  -4.53  -2.27  -7.50   7.50   7.50  [grid]
   o= 2 v= 1.058665:   0.34  -4.53  -2.27   7.50   7.50  -7.50  [grid]
   o= 3 v= 1.069989:   0.34  -4.53  -2.27  -7.50   7.50  -7.50  [grid]
   o= 4 v= 1.078569:  13.68  -4.53  -2.27   7.50   7.50   7.50  [grid]
   o= 5 v= 1.176077:  13.68  -4.53  -2.27  -7.50  -7.50   7.50  [grid]
   o= 6 v= 1.201664:   0.34   8.81  -2.27  -7.50  -7.50  -7.50  [grid]
   o= 7 v= 1.203095:   0.34  -4.53  -2.27   7.50  -7.50  -7.50  [grid]
   o= 8 v= 1.223915:  13.68   8.81  -2.27   7.50  -7.50   7.50  [grid]
   o= 9 v= 1.253584:  13.68   8.81  -2.27  -7.50  -7.50   7.50  [grid]
   o=10 v= 1.268517:   0.34  -4.53  -2.27  -7.50  -7.50  -7.50  [grid]
   o=11 v= 1.271637:  13.68  -4.53  -2.27   7.50  -7.50   7.50  [grid]
   o=12 v= 1.290232:  13.68  -4.53  -2.27  -7.50   7.50  30.00  [grid]
   o=13 v= 1.294957:  -7.19  -7.31  -4.09  15.99  13.53 -29.93  [rand]
   o=14 v= 1.301275:  13.68  -4.53  -2.27   7.50   7.50  30.00  [grid]
   o=15 v= 1.303901:   0.34  -4.53  -2.27   7.50   7.50 -30.00  [grid]
   o=16 v= 1.305977:   0.34  -4.53 -15.60  -7.50   7.50  -7.50  [grid]
   o=17 v= 1.317443:   9.42 -11.95   1.00  -5.34   3.42  10.89  [rand]
   o=18 v= 1.319229:   9.42 -11.95   1.00   5.34   3.42  10.89  [rand]
   o=19 v= 1.322564:   0.34  -4.53  -2.27  -7.50   7.50 -30.00  [grid]
   o=20 v= 1.345374:   0.34   8.81 -15.60  -7.50   7.50  -7.50  [grid]
   o=21 v= 1.348787:   0.34  -4.53 -15.60   7.50   7.50  -7.50  [grid]
   o=22 v= 1.350742:  11.09  -4.08  -1.14  -4.32  22.85  18.95  [rand]
   o=23 v= 1.357800:   0.34   8.81  -2.27   7.50  -7.50  -7.50  [grid]
   o=24 v= 1.358902:  13.68   8.81  -2.27  -7.50  -7.50  30.00  [grid]
   o=25 v= 1.359990:  13.68   8.81  -2.27   7.50   7.50   7.50  [grid]
   o=26 v= 1.366383:   4.60 -11.95   1.00   5.34   3.42 -10.89  [rand]
   o=27 v= 1.369924:   0.34   8.81  -2.27  -7.50   7.50  -7.50  [grid]
   o=28 v= 1.372639:  13.68  -4.53  -2.27 -30.00   7.50   7.50  [grid]
   o=29 v= 1.377277:   4.60 -11.95   1.00  -5.34   3.42 -10.89  [rand]
   o=30 v= 1.381293:   0.34  -4.53  -2.27   7.50   7.50   7.50  [grid]
   o=31 v= 1.382573:  13.68  -4.53  -2.27   7.50  -7.50  30.00  [grid]
   o=32 v= 1.384329:  13.68   8.81  -2.27  -7.50   7.50   7.50  [grid]
   o=33 v= 1.393298:  11.09  -4.08  -1.14   4.32  22.85  18.95  [rand]
   o=34 v= 1.398150:   0.34  -4.53  -2.27  -7.50   7.50   7.50  [grid]
   o=35 v= 1.399988:   2.93  -4.08  -1.14   4.32  22.85 -18.95  [rand]
   o=36 v= 1.405957:  13.68  -4.53  -2.27  -7.50   7.50  -7.50  [grid]
   o=37 v= 1.406115:   4.60 -11.95   1.00   5.34   3.42  10.89  [rand]
   o=38 v= 1.406716:  -7.19  -7.31  -4.09 -15.99  13.53 -29.93  [rand]
   o=39 v= 1.407681:   0.34  -4.53  -2.27  30.00   7.50  -7.50  [grid]
   o=40 v= 1.412607:   2.93  -4.08  -1.14  -4.32  22.85 -18.95  [rand]
   o=41 v= 1.419403:  13.68  -4.53 -15.60   7.50   7.50   7.50  [grid]
   o=42 v= 1.432061:  21.22  -7.31  -4.09 -15.99  13.53  29.93  [rand]
   o=43 v= 1.432290:  13.68  -4.53  -2.27   7.50   7.50  -7.50  [grid]
   o=44 v= 1.435563:  13.68   8.81  -2.27  -7.50   7.50  30.00  [grid]
   o=45 v= 1.443524:  13.68  -4.53 -15.60  -7.50   7.50   7.50  [grid]
   o=46 v= 1.443649:   0.34  -4.53  -2.27  -7.50  -7.50 -30.00  [grid]
   o=47 v= 1.449287:  13.68  -4.53  -2.27  -7.50  -7.50  30.00  [grid]
   o=48 v= 1.455248:  21.22  -7.31  -4.09  15.99  13.53  29.93  [rand]
   o=49 v= 1.459078:   0.34   8.81 -15.60   7.50   7.50  -7.50  [grid]
   o=50 v= 1.461443:   0.34   8.81  -2.27   7.50  -7.50 -30.00  [grid]
   o=51 v= 1.479678:   9.42 -11.95   1.00   5.34  -3.42  10.89  [rand]
   o=52 v= 1.486634:  13.68  -4.53  -2.27  30.00   7.50   7.50  [grid]
   o=53 v= 1.487885:  13.68   8.81 -15.60  -7.50   7.50   7.50  [grid]
   o=54 v= 1.489544:   0.34   8.81  -2.27  -7.50  -7.50 -30.00  [grid]
   o=55 v= 1.493068:   9.42 -11.95   1.00  -5.34  -3.42  10.89  [rand]
   o=56 v= 1.493374:  -7.19  -7.31 -13.77  15.99  13.53 -29.93  [rand]
   o=57 v= 1.497137:   0.34  -4.53  -2.27   7.50  -7.50   7.50  [grid]
   o=58 v= 1.500943:  13.68   8.81 -15.60   7.50   7.50   7.50  [grid]
   o=59 v= 1.507339:   0.34  -4.53  -2.27   7.50  -7.50 -30.00  [grid]
   o=60 v= 1.512192:   0.34   8.81  -2.27  -7.50  -7.50   7.50  [grid]
   o=61 v= 1.512201:   0.34  -4.53  -2.27 -30.00   7.50  -7.50  [grid]
   o=62 v= 1.518008:   9.42 -11.95   1.00  -5.34   3.42 -10.89  [rand]
   o=63 v= 1.518602:   0.34   8.81  -2.27 -30.00  -7.50  -7.50  [grid]
   o=64 v= 1.526562:  13.68  -4.53  -2.27  -7.50  -7.50  -7.50  [grid]
   o=65 v= 1.534596:   4.60 -11.95   1.00  -5.34   3.42  10.89  [rand]
   o=66 v= 1.535251:  13.68   8.81  -2.27   7.50  -7.50  30.00  [grid]
   o=67 v= 1.551557:  13.68  -4.53  -2.27  -7.50  30.00   7.50  [grid]
   o=68 v= 1.551880:   2.93  -4.08 -16.73   4.32  22.85 -18.95  [rand]
   o=69 v= 1.552256:   0.34  -4.53  -2.27  -7.50  30.00  -7.50  [grid]
   o=70 v= 1.556175:   0.34   8.81  -2.27   7.50   7.50  -7.50  [grid]
   o=71 v= 1.557780:   4.60 -11.95   1.00  -5.34  -3.42 -10.89  [rand]
   o=72 v= 1.557837:   4.60 -11.95   1.00   5.34  -3.42 -10.89  [rand]
   o=73 v= 1.558008:  13.68  -4.53  -2.27   7.50  30.00   7.50  [grid]
   o=74 v= 1.559557:   4.60 -11.95   1.00   5.34  -3.42  10.89  [rand]
   o=75 v= 1.562265:   0.34  -4.53  -2.27  30.00   7.50   7.50  [grid]
   o=76 v= 1.571908:  13.68   8.81  -2.27 -30.00  -7.50   7.50  [grid]
   o=77 v= 1.581405:  13.68  -4.53  -2.27 -30.00   7.50  -7.50  [grid]
   o=78 v= 1.582252:   0.34  -4.53 -15.60   7.50   7.50 -30.00  [grid]
   o=79 v= 1.582662:   0.34  -4.53  -2.27  30.00  -7.50  -7.50  [grid]
   o=80 v= 1.587705:   0.34  -4.53  -2.27   7.50  30.00  -7.50  [grid]
   o=81 v= 1.590619:  13.68   8.81  -2.27   7.50  -7.50  -7.50  [grid]
   o=82 v= 1.592865:  13.68  -4.53 -15.60   7.50   7.50  -7.50  [grid]
   o=83 v= 1.600250:   9.42 -11.95   1.00   5.34   3.42 -10.89  [rand]
   o=84 v= 1.602942:   0.34  -4.53  -2.27 -30.00   7.50 -30.00  [grid]
   o=85 v= 1.604302:  -7.19  -7.31 -13.77 -15.99  13.53 -29.93  [rand]
   o=86 v= 1.605230:  13.68   8.81  -2.27   7.50   7.50  30.00  [grid]
   o=87 v= 1.608998:  13.68   8.81  -2.27 -30.00  -7.50  30.00  [grid]
 + - A little optimization:*[#16324=0.896598] *[#16332=0.894428] *[#16333=0.887224] *[#16334=0.867682] *[#16336=0.865717] *[#16342=0.863468] *[#16344=0.859651] *[#16347=0.857981] *[#16358=0.85778] *[#16360=0.857481] ..*[#16468=0.855631] ................................*[#18268=0.85533] *[#18273=0.853294] *[#18279=0.852467] *[#18280=0.852042] *[#18282=0.851485] *[#18287=0.851235] *[#18288=0.851006] ......................................................
 + - costs of the above after a little optimization:
   o= 0 v= 0.857481:   7.70   1.74  -5.84   0.18   3.68  -0.48  [grid]  [f=43]
   o= 1 v= 0.876474:   9.47  -0.64  -5.74  -2.17   5.43   6.20  [grid]  [f=47]
   o= 2 v= 0.855631:   5.48   0.74  -6.09  -0.67   4.45  -4.19  [grid]  [f=67]
   o= 3 v= 0.863869:   3.94  -0.40  -6.15  -0.59   4.86  -7.93  [grid]  [f=51]
   o= 4 v= 0.872152:   9.70   0.06  -6.00  -1.30   6.60   6.08  [grid]  [f=48]
   o= 5 v= 0.875004:   9.07   1.47  -5.53  -2.25   3.55   5.77  [grid]  [f=44]
   o= 6 v= 0.864867:   3.37  -0.06  -6.07  -3.43   4.31  -8.30  [grid]  [f=46]
   o= 7 v= 0.856277:   4.71  -0.04  -6.61  -0.36   6.44  -6.19  [grid]  [f=46]
   o= 8 v= 0.904820:   9.98   2.88  -5.59  -0.06   0.01   5.52  [grid]  [f=47]
   o= 9 v= 0.892521:  11.07   1.57  -4.70   0.48   3.55   9.01  [grid]  [f=54]
   o=10 v= 0.862640:   4.55   0.72  -5.90  -1.72   2.67  -6.23  [grid]  [f=58]
   o=11 v= 0.888038:  11.06  -0.03  -5.60   1.02   6.16   8.02  [grid]  [f=48]
   o=12 v= 0.859835:   8.36   0.41  -5.90  -1.76   5.48   2.85  [grid]  [f=64]
   o=13 v= 0.893977:  -0.03   1.95  -8.25  -4.05   6.28 -12.96  [rand]  [f=83]
   o=14 v= 0.865493:   8.14  -1.11  -6.36   0.48   6.57   0.81  [grid]  [f=52]
   o=15 v= 0.870815:   3.38  -1.46  -6.22  -1.07   7.23  -8.73  [grid]  [f=65]
   o=16 v= 0.856553:   5.36   0.88  -6.26  -0.82   4.85  -6.38  [grid]  [f=53]
   o=17 v= 0.870540:   9.73   1.14  -6.17  -1.14   5.75   5.96  [rand]  [f=54]
   o=18 v= 0.867791:   8.50   0.83  -5.33  -2.05   4.85   3.82  [rand]  [f=65]
   o=19 v= 0.882824:   0.95   1.05  -7.63  -3.11   5.91 -13.46  [grid]  [f=63]
   o=20 v= 0.865294:   2.90   2.16  -6.95  -2.82   4.05  -8.78  [grid]  [f=53]
   o=21 v= 0.863213:   3.10   0.89  -7.59  -0.54   6.07  -9.41  [grid]  [f=52]
   o=22 v= 0.858472:   7.10  -0.14  -6.68  -1.06   5.79  -1.53  [rand]  [f=51]
   o=23 v= 0.870785:   2.83   0.05  -7.16   0.79   6.32 -11.05  [grid]  [f=62]
   o=24 v= 0.883131:  10.15   0.31  -5.25  -1.70   4.79   8.39  [grid]  [f=83]
   o=25 v= 0.872968:  10.57   0.61  -5.72  -0.87   6.13   6.91  [grid]  [f=50]
   o=26 v= 0.861232:   5.53  -0.40  -5.44  -1.04   4.25  -4.12  [rand]  [f=55]
   o=27 v= 0.871815:   1.76   1.29  -6.85  -2.76   4.50 -10.11  [grid]  [f=41]
   o=28 v= 0.875890:   8.15  -0.13  -5.39  -4.04   6.53   5.10  [grid]  [f=50]
   o=29 v= 0.856667:   4.96   0.87  -5.71  -0.26   4.87  -5.96  [rand]  [f=52]
   o=30 v= 0.863431:   5.84  -1.03  -5.41   0.33   5.24  -2.99  [grid]  [f=65]
   o=31 v= 0.873358:   9.83   0.46  -5.81   0.97   5.63   5.55  [grid]  [f=74]
   o=32 v= 0.880074:   9.69  -0.23  -5.73   0.27   5.78   7.20  [grid]  [f=50]
   o=33 v= 0.889544:  11.21   0.27  -5.59  -0.39   6.51   9.80  [rand]  [f=50]
  *o=34 v= 0.851006:   7.50   0.74  -6.26   0.14   6.00  -0.79  [grid]  [f=49]
   o=35 v= 0.860469:   4.23  -0.15  -6.52   0.33   6.32  -7.18  [rand]  [f=56]
   o=36 v= 0.861999:   6.69  -1.10  -5.81  -0.54   5.66  -1.77  [grid]  [f=51]
   o=37 v= 0.852141:   7.60   1.01  -6.09   1.14   5.48  -0.56  [rand]  [f=56]
   o=38 v= 0.886183:   0.86  -0.28  -7.13  -2.08   5.34 -13.43  [rand]  [f=80]
   o=39 v= 0.869417:   4.54   0.13  -7.34   0.80   6.76  -8.81  [grid]  [f=76]
   o=40 v= 0.865436:   3.35  -0.65  -7.25  -0.60   5.21  -8.57  [rand]  [f=47]
   o=41 v= 0.862631:   7.74  -0.58  -5.85  -0.63   5.92   2.13  [grid]  [f=53]
   o=42 v= 0.940274:  13.93   0.80  -5.84  -1.72   7.20  15.81  [rand]  [f=68]
   o=43 v= 0.862811:   6.25  -1.14  -6.04  -0.10   5.80  -4.05  [grid]  [f=45]
   o=44 v= 0.874880:  10.12   0.69  -5.85  -1.12   6.30   7.22  [grid]  [f=77]
   o=45 v= 0.867468:   9.22   0.66  -6.23  -1.60   6.48   4.95  [grid]  [f=45]
   o=46 v= 0.888489:   0.52   0.73  -7.84  -2.93   6.89 -13.79  [grid]  [f=80]
   o=47 v= 0.882464:  10.21   0.24  -7.04   0.39   7.35   6.86  [grid]  [f=80]
   o=48 v= 0.928804:  13.89   0.57  -5.65  -1.86   5.97  14.83  [rand]  [f=65]
   o=49 v= 0.872657:   6.99   2.72  -5.63  -3.99   3.14   0.34  [grid]  [f=45]
   o=50 v= 0.872368:   1.70  -0.06  -7.62  -2.05   6.58 -11.50  [grid]  [f=54]
   o=51 v= 0.877462:   8.89   0.06  -5.40   0.19   3.35   3.11  [rand]  [f=52]
   o=52 v= 0.870279:   3.45  -0.37  -6.83   1.22   7.85  -8.49  [grid]  [f=73]
   o=53 v= 0.872770:   8.43   0.38  -5.56  -3.89   4.26   3.57  [grid]  [f=46]
   o=54 v= 0.867089:   4.25   2.06  -7.28  -2.93   3.94  -7.15  [grid]  [f=77]
   o=55 v= 0.867838:   8.67   0.02  -5.20  -1.69   5.10   3.89  [rand]  [f=59]
   o=56 v= 0.886013:   0.96  -0.36  -7.35  -0.56   5.97 -14.10  [rand]  [f=74]
   o=57 v= 0.864679:   6.35  -0.55  -5.50   0.18   4.82  -2.52  [grid]  [f=51]
   o=58 v= 0.856205:   8.43   0.93  -6.51  -0.77   5.81   0.78  [grid]  [f=58]
   o=59 v= 0.874279:   1.86   0.08  -7.78  -2.72   6.19 -12.27  [grid]  [f=51]
   o=60 v= 0.860005:   8.17   0.37  -6.74  -1.06   6.63   1.37  [grid]  [f=57]
   o=61 v= 0.869233:   4.15  -1.56  -5.89  -1.63   5.96  -7.29  [grid]  [f=57]
   o=62 v= 0.863126:   4.90  -1.11  -6.25  -0.94   5.92  -7.00  [rand]  [f=53]
   o=63 v= 0.862576:   5.39   1.01  -6.43  -2.74   4.27  -1.75  [grid]  [f=52]
   o=64 v= 0.855912:   6.23   0.86  -5.76   0.12   5.39  -2.27  [grid]  [f=62]
   o=65 v= 0.865129:   9.24   0.74  -5.83  -0.50   5.65   4.24  [rand]  [f=54]
   o=66 v= 0.885323:  10.82   0.96  -5.60   2.39   5.79   5.85  [grid]  [f=82]
   o=67 v= 0.878665:   8.28  -1.50  -7.66  -0.50   8.68   0.67  [grid]  [f=58]
   o=68 v= 0.865177:   3.78   0.19  -6.46  -0.76   6.24  -6.87  [rand]  [f=74]
   o=69 v= 0.865503:   3.38  -0.25  -6.68  -0.58   6.28  -9.49  [grid]  [f=53]
   o=70 v= 0.855135:   5.37   0.99  -6.45   1.06   5.49  -5.59  [grid]  [f=57]
   o=71 v= 0.854618:   6.25   1.34  -5.97   0.17   4.22  -3.75  [rand]  [f=64]
   o=72 v= 0.862661:   4.36  -0.40  -5.83  -0.57   5.14  -7.26  [rand]  [f=69]
   o=73 v= 0.865486:   7.20  -1.54  -5.54  -0.97   6.72   0.28  [grid]  [f=63]
   o=74 v= 0.890961:   8.66  -2.58  -4.74  -0.62   5.38   3.45  [rand]  [f=50]
   o=75 v= 0.865746:   3.80  -0.92  -6.43  -1.21   6.65  -8.91  [grid]  [f=62]
   o=76 v= 0.867624:   9.18   1.49  -5.24  -1.09   4.03   3.74  [grid]  [f=58]
   o=77 v= 0.867361:   7.90  -1.06  -6.26   0.30   5.70   1.44  [grid]  [f=54]
   o=78 v= 0.891903:   3.51  -1.41  -8.12   1.98   9.95  -9.89  [grid]  [f=78]
   o=79 v= 0.862264:   4.64   0.14  -6.21  -0.82   4.58  -8.02  [grid]  [f=83]
   o=80 v= 0.866121:   4.20   0.77  -6.85  -4.06   3.09  -6.30  [grid]  [f=60]
   o=81 v= 0.858195:   6.65   0.82  -6.68   2.17   4.97  -3.83  [grid]  [f=56]
   o=82 v= 0.862008:   5.50  -0.29  -6.20  -2.27   4.59  -2.22  [grid]  [f=57]
   o=83 v= 0.865195:   4.41  -0.47  -6.49  -0.74   6.46  -7.78  [rand]  [f=64]
   o=84 v= 0.901325:  -0.68   0.44  -8.36  -2.84   7.14 -14.96  [grid]  [f=68]
   o=85 v= 0.880615:   1.21   0.54  -7.23  -1.10   5.92 -13.27  [rand]  [f=64]
   o=86 v= 0.909853:  12.32  -0.18  -6.35  -0.04   8.63  10.73  [grid]  [f=69]
   o=87 v= 0.898623:  12.39   1.14  -5.83   0.61   5.79  10.43  [grid]  [f=65]
 + - saving #34 for use with twobest
 + - skip #37 for twobest: too close to set #34
 + - skip #71 for twobest: too close to set #34
 + - skip #70 for twobest: too close to set #71
 + - skip # 2 for twobest: too close to set #34
 + - skip #64 for twobest: too close to set #34
 + - skip #58 for twobest: too close to set #34
 + - skip # 7 for twobest: too close to set #71
 + - skip #16 for twobest: too close to set #71
 + - skip #29 for twobest: too close to set #71
 + - skip # 0 for twobest: too close to set #34
 + - skip #81 for twobest: too close to set #34
 + - skip #22 for twobest: too close to set #34
 + - skip #12 for twobest: too close to set #34
 + - skip #60 for twobest: too close to set #34
 + - skip #35 for twobest: too close to set #71
 + - skip #26 for twobest: too close to set #34
 + - skip #36 for twobest: too close to set #34
 + - skip #82 for twobest: too close to set #34
 + - skip #79 for twobest: too close to set #71
 + - skip #63 for twobest: too close to set #34
 + - skip #41 for twobest: too close to set #34
 + - skip #10 for twobest: too close to set #71
 + - skip #72 for twobest: too close to set #71
 + - skip #43 for twobest: too close to set #34
 + - skip #62 for twobest: too close to set #71
 + - skip #21 for twobest: too close to set #70
 + - skip #30 for twobest: too close to set #34
 + - skip # 3 for twobest: too close to set #71
 + - skip #57 for twobest: too close to set #34
 + - skip # 6 for twobest: too close to set #70
 + - skip #65 for twobest: too close to set #58
 + - skip #68 for twobest: too close to set #71
 + - skip #83 for twobest: too close to set #71
 + - skip #20 for twobest: too close to set #70
 + - skip #40 for twobest: too close to set #70
 + - skip #73 for twobest: too close to set #34
 + - skip #14 for twobest: too close to set #34
 + - skip #69 for twobest: too close to set #70
 + - skip #75 for twobest: too close to set #70
 + - skip #80 for twobest: too close to set #71
 + - skip #54 for twobest: too close to set #71
 + - skip #77 for twobest: too close to set #34
 + - skip #45 for twobest: too close to set #58
 + - skip #76 for twobest: too close to set #37
 + - skip #18 for twobest: too close to set #37
 + - skip #55 for twobest: too close to set #37
 + - skip #61 for twobest: too close to set #71
 + - skip #39 for twobest: too close to set #70
 + - skip #52 for twobest: too close to set #70
 + - skip #17 for twobest: too close to set #12
 + - skip #23 for twobest: too close to set #35
 + - skip #15 for twobest: too close to set #70
 + - skip #27 for twobest: too close to set # 7
 + - skip # 4 for twobest: too close to set #12
 + - skip #50 for twobest: too close to set #35
 + - skip #49 for twobest: too close to set #34
 + - skip #53 for twobest: too close to set #34
 + - skip #25 for twobest: too close to set #12
 + - skip #31 for twobest: too close to set #12
 + - skip #59 for twobest: too close to set #79
 + - skip #44 for twobest: too close to set #12
 + - skip # 5 for twobest: too close to set #12
 + - skip #28 for twobest: too close to set #58
 + - skip # 1 for twobest: too close to set #12
 + - skip #51 for twobest: too close to set #34
 + - skip #67 for twobest: too close to set #34
 + - skip #32 for twobest: too close to set #12
 + - skip #85 for twobest: too close to set #21
 + - skip #47 for twobest: too close to set #12
 + - skip #19 for twobest: too close to set #21
 + - skip #24 for twobest: too close to set #65
 + - skip #66 for twobest: too close to set #12
 + - skip #56 for twobest: too close to set #23
 + - skip #38 for twobest: too close to set #21
 + - skip #11 for twobest: too close to set #65
 + - skip #46 for twobest: too close to set #21
 + - skip #33 for twobest: too close to set #17
 + - skip #74 for twobest: too close to set #34
 + - skip #78 for twobest: too close to set #70
 + - skip # 9 for twobest: too close to set #45
 + - skip #13 for twobest: too close to set #21
 + - skip #87 for twobest: too close to set #17
 + - skip #84 for twobest: too close to set #23
 + - skip # 8 for twobest: too close to set #76
 + - skip #86 for twobest: too close to set #25
 + - skip #48 for twobest: too close to set #87
 + - skip #42 for twobest: too close to set #48
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 2 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.33
 + - Smoothing source; radius=2.33
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 252.507 .. 995.309; base clip 0.343227 .. 1.16668
 +  - versus source range 0.00430817 .. 927.364; base range 0 .. 1.4331
 + 54987 total points stored in 108 'TOHD(14.8402)' bloks (0 duplicates)
*[#21606=0.845413] *[#21618=0.836585] *[#21623=0.678943] *[#21624=0.628222] *[#21625=0.615846] *[#21626=0.610548] *[#21627=0.607847] *[#21629=0.606138] *[#21631=0.601724] *[#21633=0.595957] *[#21634=0.595819] *[#21635=0.594335] *[#21659=0.593988] *[#21660=0.593513] *[#21667=0.59337] *[#21673=0.593129] *[#21677=0.593084] *[#21678=0.593047] *[#21680=0.592993] *[#21683=0.592976] *[#21684=0.592916] *[#21689=0.592912] *[#21691=0.592836] *[#21694=0.59282] *[#21695=0.592817] *[#21696=0.592796] 
 + - param set #1 has cost=0.592796 [o=34 t=0]
 + -- Parameters = 7.7279 2.2287 -5.0284 0.0808 -5.8969 -5.1544 0.8982 0.9122 0.9120 -0.0139 -0.0230 -0.0258
*[#21728=0.591628] *[#21729=0.587052] *[#21730=0.58526] *[#21732=0.580263] *[#21741=0.579965] *[#21745=0.571159] *[#21747=0.571048] *[#21756=0.570493] *[#21757=0.568448] *[#21758=0.568128] *[#21760=0.567634] *[#21762=0.567633] *[#21765=0.565686] *[#21766=0.562334] *[#21767=0.559307] *[#21768=0.557179] *[#21771=0.554805] *[#21774=0.553485] *[#21776=0.552501] *[#21777=0.552197] *[#21778=0.550142] *[#21779=0.545922] *[#21780=0.537301] *[#21782=0.537108] *[#21783=0.535268] *[#21784=0.529227] *[#21789=0.527815] *[#21790=0.526823] *[#21792=0.526608] *[#21793=0.526107] *[#21796=0.522958] *[#21797=0.520491] *[#21799=0.520343] *[#21801=0.519973] *[#21803=0.519516] 
 + - param set #2 has cost=0.519516 [o=-1 t=-1]
 + -- Parameters = 7.6709 -1.9721 3.0619 -2.0230 0.2958 -0.7379 0.9166 0.8820 0.9738 0.0055 0.0090 0.0001
++ Start refinement #2 on 2 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.81
 + - Smoothing source; radius=1.81
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 261.491 .. 1012.5; base clip 0.343938 .. 1.19323
 +  - versus source range 0 .. 928.208; base range 0 .. 1.46982
 + 53744 total points stored in 105 'TOHD(14.7676)' bloks (0 duplicates)
 + - param set #1 has cost=0.579695 [o=34 t=0]
 + -- Parameters = 4.6990 2.3359 -2.9306 -2.7521 -5.1058 -5.5057 0.9016 0.8909 0.9197 -0.0121 -0.0242 -0.0240
*[#21936=0.51934] *[#21937=0.518624] *[#21938=0.518398] *[#21940=0.518122] *[#21941=0.517882] *[#21942=0.517557] *[#21944=0.517538] *[#21945=0.517503] *[#21948=0.517348] *[#21950=0.51729] *[#21957=0.5168] *[#21959=0.516585] *[#21960=0.516505] *[#21964=0.516161] *[#21965=0.515803] *[#21967=0.515752] *[#21968=0.515737] *[#21972=0.515734] *[#21974=0.515585] *[#21975=0.515552] *[#21976=0.515248] *[#21977=0.514885] *[#21978=0.514443] *[#21979=0.514329] *[#21980=0.513659] *[#21981=0.513486] *[#21983=0.5132] *[#21984=0.513035] *[#21985=0.512567] *[#21988=0.512123] *[#21993=0.512013] *[#21994=0.511673] *[#21995=0.511635] *[#21996=0.511361] *[#21997=0.510931] *[#21998=0.510923] *[#22001=0.510856] 
 + - param set #2 has cost=0.510856 [o=-1 t=-1]
 + -- Parameters = 8.1812 -2.2744 4.8143 -1.6273 1.1736 -0.0381 0.9387 0.8660 0.9361 0.0181 0.0190 0.0005
++ Start refinement #3 on 2 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.41
 + - Smoothing source; radius=1.41
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + - using 64360 points from base image [use_all=2]
 + * Exit alignment setup routine
 +  - histogram: source clip 262.08 .. 1016.01; base clip 0.344466 .. 1.21014
 +  - versus source range 0 .. 928.809; base range 0 .. 1.4912
 + 54449 total points stored in 109 'TOHD(14.7235)' bloks (0 duplicates)
 + - param set #1 has cost=0.543764 [o=34 t=0]
 + -- Parameters = 6.8365 1.1078 2.8838 1.2290 -2.4730 -1.7149 0.9516 0.7360 0.9928 0.0382 0.0250 -0.0213
 + - param set #2 has cost=0.511375 [o=-1 t=-1]
 + -- Parameters = 7.9538 -2.2854 4.9758 -1.4256 1.3656 -0.4059 0.9403 0.8788 0.9305 0.0179 0.0191 0.0003
 + - Total coarse refinement net CPU time = 0.0 s; 616 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=57 usiz=463
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 3 cases
 +  - histogram: source clip 256.322 .. 992.839; base clip 0.344466 .. 1.21014
 +  - versus source range 0 .. 929.682; base range 0 .. 1.49956
 + 53740 total points stored in 107 'TOHD(14.6898)' bloks (0 duplicates)
 + - cost(#1)=0.544038 * [o=34 t=0]
 + -- Parameters = 6.8365 1.1078 2.8838 1.2290 -2.4730 -1.7149 0.9516 0.7360 0.9928 0.0382 0.0250 -0.0213
 + - cost(#2)=0.511748 * [o=-1 t=-1]
 + -- Parameters = 7.9538 -2.2854 4.9758 -1.4256 1.3656 -0.4059 0.9403 0.8788 0.9305 0.0179 0.0191 0.0003
 + - cost(#3)=0.937211   [o=-2 t=-2]
 + -- Parameters = 7.0109 2.1415 -8.9324 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 3 cases
 + - cost(#1)=0.530877 * [o=34 t=0]
 + -- Parameters = 7.2808 -0.7095 3.2170 -0.1539 0.0498 -0.8138 0.9413 0.8345 0.9764 0.0263 0.0048 -0.0188
*[#22408=0.510807] *[#22411=0.510534] *[#22412=0.510495] *[#22415=0.510276] *[#22417=0.51026] *[#22420=0.510237] *[#22422=0.509922] *[#22423=0.509847] *[#22424=0.50974] 
 + - cost(#2)=0.509740 * [o=-1 t=-1]
 + -- Parameters = 8.2407 -2.3216 5.3269 -1.5113 2.1229 0.3159 0.9513 0.8753 0.9218 0.0096 0.0214 0.0017
 + - cost(#3)=0.511116   [o=-2 t=-2]
 + -- Parameters = 8.5061 -1.8805 5.4148 -1.2993 1.8931 0.7104 0.9529 0.8803 0.9099 0.0140 -0.0122 -0.0134
 + - case #2 [o=-1 t=-1] is now the best
 + - Initial  cost = 0.509740
 + - Initial fine Parameters = 8.2407 -2.3216 5.3269 -1.5113 2.1229 0.3159 0.9513 0.8753 0.9218 0.0096 0.0214 0.0017
*[#22642=0.509541] *[#22652=0.509513] *[#22653=0.509099] *[#22662=0.509068] *[#22665=0.509031] *[#22669=0.508998] *[#22688=0.508841] *[#22689=0.508639] *[#22698=0.50863] *[#22724=0.508624] *[#22726=0.508614] *[#22735=0.508606] *[#22736=0.508605] *[#22751=0.508597] *[#22758=0.508595] *[#22763=0.508593] *[#22765=0.508588] *[#22767=0.508584] 
 + - Finalish cost = 0.508584 ; 159 funcs
 + - ini Finalish Parameters = 8.1939 -2.2599 5.3437 -1.4626 2.1329 0.3010 0.9514 0.8747 0.9206 0.0090 0.0143 0.0020
 +  - Set lpc+ parameters back to purity before Final iterations
 +  - histogram: source clip 257.271 .. 1006.05; base clip 0.344466 .. 1.21014
 +  - versus source range 0 .. 929.682; base range 0 .. 1.49956
*[#22790=-0.0657434] *[#22854=-0.0661084] *[#22863=-0.0666093] *[#22878=-0.0666237] *[#22882=-0.0666292] *[#22886=-0.066686] *[#22896=-0.066706] *[#22897=-0.0667628] *[#22899=-0.0668965] *[#22905=-0.0670649] *[#22910=-0.0671596] *[#22913=-0.0673814] *[#22928=-0.0674116] *[#22930=-0.0674132] *[#22934=-0.067663] *[#22937=-0.0677134] *[#22940=-0.0677352] *[#22942=-0.0677828] *[#22943=-0.0677924] *[#22944=-0.0678321] *[#22947=-0.0678908] *[#22950=-0.0679774] *[#22951=-0.0680948] *[#22962=-0.0681465] *[#22973=-0.0681815] *[#22988=-0.0681951] *[#22995=-0.0682335] *[#22998=-0.0682982] *[#22999=-0.0683412] *[#23022=-0.0683605] *[#23025=-0.0683994] *[#23026=-0.0684156] *[#23029=-0.0684327] *[#23039=-0.068465] *[#23040=-0.068493] *[#23049=-0.0684944] *[#23051=-0.0685187] *[#23054=-0.0685325] *[#23055=-0.0685474] *[#23059=-0.068573] *[#23060=-0.0685775] *[#23063=-0.0685786] *[#23065=-0.0686272] *[#23068=-0.0686587] *[#23070=-0.0686967] *[#23073=-0.0687016] *[#23076=-0.0687327] *[#23077=-0.0687492] *[#23088=-0.0687998] *[#23093=-0.0688474] *[#23098=-0.0688555] *[#23099=-0.0688612] *[#23110=-0.0688635] *[#23115=-0.0688925] *[#23116=-0.0689115] *[#23118=-0.0689232] *[#23119=-0.0689283] *[#23122=-0.068941] *[#23124=-0.0689522] *[#23125=-0.0689772] *[#23126=-0.0690043] *[#23127=-0.0690332] *[#23130=-0.0690576] *[#23133=-0.0690755] *[#23134=-0.0690961] *[#23135=-0.0691007] *[#23136=-0.0691658] *[#23137=-0.0691992] *[#23138=-0.0692225] *[#23139=-0.0692902] *[#23140=-0.0693512] *[#23141=-0.0694361] *[#23142=-0.0695132] *[#23143=-0.0695242] *[#23146=-0.0695482] *[#23147=-0.0696259] *[#23150=-0.0696855] *[#23151=-0.0697275] *[#23152=-0.0697456] *[#23155=-0.0698188] *[#23156=-0.069858] *[#23157=-0.0699304] *[#23160=-0.0700337] *[#23161=-0.0701165] *[#23162=-0.0701762] *[#23163=-0.0703565] *[#23164=-0.0707155] *[#23165=-0.0712708] *[#23174=-0.0713671] *[#23176=-0.071386] *[#23177=-0.0715545] *[#23178=-0.0715758] *[#23179=-0.0716566] *[#23180=-0.0717009] *[#23181=-0.0717728] *[#23182=-0.0718165] *[#23187=-0.0718592] *[#23188=-0.0719103] *[#23189=-0.0719581] *[#23192=-0.0719821] *[#23196=-0.0720004] *[#23197=-0.0720206] *[#23198=-0.0720426] *[#23199=-0.0720744] *[#23200=-0.0721235] *[#23204=-0.0721243] *[#23205=-0.0721357] *[#23206=-0.0721604] *[#23207=-0.0721604] *[#23209=-0.0722107] *[#23210=-0.0722461] *[#23211=-0.0723006] *[#23212=-0.072312] *[#23213=-0.0724021] *[#23216=-0.0724136] *[#23217=-0.0724517] *[#23218=-0.0725115] *[#23221=-0.0725412] *[#23223=-0.0725525] *[#23224=-0.0725738] *[#23225=-0.0725953] *[#23228=-0.0726008] *[#23229=-0.072616] *[#23230=-0.0726278] *[#23231=-0.0726491] *[#23232=-0.0726561] *[#23233=-0.0726803] *[#23234=-0.0727055] *[#23239=-0.072722] *[#23240=-0.072735] *[#23241=-0.0727448] *[#23242=-0.0727553] *[#23243=-0.0727607] *[#23244=-0.0727849] *[#23245=-0.0727978] *[#23246=-0.0728144] *[#23247=-0.0728549] *[#23249=-0.0728792] *[#23251=-0.0728882] *[#23253=-0.0728944] *[#23254=-0.0729046] *[#23257=-0.0729214] *[#23258=-0.0729353] *[#23259=-0.0729522] *[#23260=-0.0729754] *[#23261=-0.0730068] *[#23262=-0.073022] *[#23263=-0.0730737] *[#23264=-0.0730763] *[#23265=-0.0730953] *[#23267=-0.0731013] *[#23270=-0.0731252] *[#23272=-0.0731276] *[#23273=-0.0731369] *[#23274=-0.0731545] *[#23275=-0.0731647] *[#23278=-0.0731857] *[#23281=-0.0731956] *[#23282=-0.0732071] *[#23285=-0.0732234] *[#23286=-0.0732245] *[#23288=-0.0732398] *[#23289=-0.0732458] *[#23292=-0.0732506] *[#23293=-0.0732658] *[#23295=-0.073278] *[#23296=-0.0733028] *[#23297=-0.0733363] *[#23300=-0.0733578] *[#23301=-0.0733917] *[#23302=-0.0734622] *[#23303=-0.0735261] *[#23304=-0.0736168] *[#23305=-0.073786] *[#23306=-0.0738595] *[#23308=-0.0738904] *[#23309=-0.0739456] *[#23313=-0.0740229] *[#23314=-0.0740358] *[#23315=-0.0740506] *[#23316=-0.0741509] *[#23317=-0.0741657] *[#23320=-0.0742379] *[#23321=-0.0742725] *[#23324=-0.0743094] *[#23325=-0.0743099] *[#23327=-0.074344] *[#23328=-0.0743503] *[#23331=-0.0743631] *[#23332=-0.0743737] *[#23333=-0.0743818] *[#23336=-0.074394] *[#23337=-0.0744112] *[#23338=-0.0744292] *[#23339=-0.0744569] *[#23340=-0.0744968] *[#23341=-0.0745366] *[#23342=-0.0745923] *[#23345=-0.0746363] *[#23346=-0.07465] *[#23348=-0.0746556] *[#23349=-0.0746987] *[#23354=-0.074734] *[#23355=-0.0747674] *[#23356=-0.0748213] *[#23357=-0.0748956] *[#23358=-0.0748995] *[#23361=-0.0749035] *[#23364=-0.074924] *[#23365=-0.0749394] *[#23366=-0.0749406] *[#23368=-0.0749621] *[#23369=-0.0749808] *[#23370=-0.0749904] *[#23371=-0.0749957] *[#23372=-0.0750142] *[#23373=-0.0750378] *[#23375=-0.075043] *[#23378=-0.0750437] *[#23380=-0.0750534] *[#23382=-0.0750637] *[#23383=-0.0750718] *[#23384=-0.0750829] *[#23385=-0.0750915] *[#23386=-0.0750975] *[#23389=-0.0751014] *[#23390=-0.075102] *[#23392=-0.0751069] *[#23394=-0.0751179] *[#23395=-0.07513] *[#23396=-0.075137] *[#23397=-0.075148] *[#23398=-0.0751566] *[#23399=-0.0751645] *[#23400=-0.0751832] *[#23401=-0.0752116] *[#23404=-0.0752423] *[#23405=-0.0752917] *[#23406=-0.0753473] *[#23407=-0.0754076] *[#23408=-0.0755173] *[#23413=-0.0756012] *[#23414=-0.0757117] *[#23417=-0.0757963] *[#23418=-0.0758389] *[#23419=-0.0759133] *[#23425=-0.0759374] *[#23426=-0.075953] *[#23427=-0.0759705] *[#23428=-0.0759981] *[#23429=-0.0760269] *[#23430=-0.0760577] *[#23431=-0.0760823] *[#23432=-0.0761204] *[#23433=-0.0761363] *[#23435=-0.0761506] *[#23436=-0.0761513] *[#23438=-0.0761595] *[#23439=-0.0761733] *[#23440=-0.0761832] *[#23441=-0.0761888] *[#23443=-0.0761915] *[#23444=-0.076193] *[#23446=-0.0762078] *[#23447=-0.0762251] *[#23448=-0.0762371] *[#23449=-0.0762543] *[#23450=-0.0762946] *[#23451=-0.0763327] *[#23454=-0.076387] *[#23455=-0.0764509] *[#23462=-0.0764577] *[#23465=-0.0764614] *[#23468=-0.0764633] *[#23470=-0.0764714] *[#23471=-0.0764797] *[#23473=-0.0764828] *[#23474=-0.0764844] *[#23476=-0.0764866] *[#23478=-0.07649] *[#23479=-0.0764978] *[#23482=-0.0765063] *[#23483=-0.0765082] *[#23484=-0.0765124] *[#23486=-0.0765185] *[#23487=-0.0765186] *[#23491=-0.0765237] *[#23494=-0.0765281] *[#23497=-0.0765338] *[#23498=-0.0765481] *[#23499=-0.0765668] *[#23500=-0.0765749] *[#23503=-0.0765773] *[#23507=-0.0765827] *[#23514=-0.0765902] *[#23517=-0.0765937] *[#23522=-0.0766023] *[#23527=-0.0766042] *[#23530=-0.0766086] *[#23535=-0.0766091] *[#23539=-0.0766171] *[#23544=-0.076621] *[#23550=-0.0766215] *[#23557=-0.0766248] *[#23562=-0.0766286] *[#23563=-0.0766326] *[#23576=-0.0766403] *[#23579=-0.0766448] *[#23580=-0.0766484] *[#23581=-0.0766516] *[#23582=-0.0766534] *[#23583=-0.0766591] *[#23586=-0.0766699] *[#23587=-0.0766717] *[#23588=-0.0766762] *[#23591=-0.0766823] *[#23592=-0.0766927] *[#23593=-0.0766938] *[#23595=-0.0766949] *[#23596=-0.0767056] *[#23597=-0.0767111] *[#23598=-0.0767162] *[#23599=-0.0767193] *[#23600=-0.0767228] *[#23603=-0.0767343] *[#23604=-0.0767478] *[#23605=-0.0767587] *[#23606=-0.0767736] *[#23607=-0.076802] *[#23613=-0.0768034] *[#23614=-0.0768185] *[#23615=-0.0768288] *[#23616=-0.0768404] *[#23617=-0.0768482] *[#23620=-0.0768542] *[#23621=-0.076862] *[#23625=-0.0768657] *[#23626=-0.0768748] *[#23627=-0.076878] *[#23628=-0.0768806] *[#23633=-0.0768882] *[#23634=-0.0768895] *[#23636=-0.076901] *[#23645=-0.0769047] *[#23646=-0.0769076] *[#23647=-0.0769084] *[#23648=-0.0769133] *[#23649=-0.076922] *[#23650=-0.0769325] *[#23659=-0.0769425] *[#23664=-0.0769466] *[#23665=-0.0769511] *[#23666=-0.0769518] *[#23668=-0.0769577] *[#23673=-0.0769602] *[#23674=-0.076962] *[#23681=-0.0769639] *[#23688=-0.0769652] *[#23689=-0.0769705] *[#23704=-0.0769723] *[#23707=-0.0769738] *[#23708=-0.0769797] *[#23709=-0.0769815] *[#23710=-0.0769904] *[#23711=-0.076999] *[#23712=-0.0770013] *[#23715=-0.0770043] *[#23724=-0.0770097] *[#23725=-0.0770121] *[#23728=-0.0770133] *[#23729=-0.0770184] *[#23732=-0.0770237] *[#23735=-0.077034] *[#23738=-0.0770395] *[#23739=-0.0770439] *[#23740=-0.0770459] *[#23747=-0.0770498] *[#23752=-0.0770513] *[#23755=-0.0770536] *[#23756=-0.0770557] *[#23757=-0.0770597] *[#23760=-0.0770638] *[#23771=-0.0770667] *[#23778=-0.0770697] *[#23779=-0.0770711] *[#23788=-0.0770743] *[#23803=-0.077075] *[#23806=-0.0770778] *[#23807=-0.0770789] *[#23812=-0.077083] *[#23819=-0.0770843] *[#23823=-0.0770857] *[#23828=-0.0770888] *[#23831=-0.0770898] *[#23834=-0.0770928] *[#23835=-0.0770932] *[#23842=-0.0770951] *[#23845=-0.0770957] *[#23848=-0.077099] *[#23851=-0.0771032] *[#23852=-0.0771044] *[#23853=-0.0771053] *[#23856=-0.077106] *[#23859=-0.0771095] *[#23860=-0.0771108] *[#23863=-0.0771127] *[#23866=-0.0771169] *[#23869=-0.0771218] *[#23870=-0.0771238] *[#23871=-0.0771267] *[#23874=-0.0771297] *[#23875=-0.0771327] *[#23876=-0.0771371] *[#23879=-0.0771397] *[#23880=-0.0771403] *[#23885=-0.0771415] *[#23888=-0.0771454] *[#23889=-0.0771475] *[#23890=-0.0771554] *[#23897=-0.0771574] *[#23904=-0.0771605] *[#23913=-0.0771624] *[#23914=-0.0771644] *[#23915=-0.0771656] *[#23916=-0.0771673] *[#23917=-0.0771679] *[#23920=-0.0771688] *[#23921=-0.0771699] *[#23922=-0.0771733] *[#23929=-0.0771749] *[#23930=-0.0771776] *[#23931=-0.0771804] *[#23932=-0.0771828] *[#23933=-0.0771862] *[#23938=-0.0771896] *[#23945=-0.0771913] *[#23946=-0.0771949] *[#23951=-0.0771983] *[#23952=-0.0771994] *[#23953=-0.0772002] *[#23954=-0.0772008] *[#23957=-0.0772054] *[#23966=-0.077206] *[#23967=-0.0772078] *[#23968=-0.0772101] *[#23975=-0.0772119] *[#23976=-0.0772121] *[#23984=-0.0772171] *[#23993=-0.0772176] *[#23996=-0.0772187] *[#24001=-0.0772189] *[#24003=-0.0772195] *[#24005=-0.0772201] *[#24008=-0.077222] *[#24009=-0.0772232] *[#24010=-0.0772243] *[#24017=-0.077225] *[#24022=-0.0772256] *[#24026=-0.0772257] *[#24032=-0.0772264] *[#24035=-0.0772267] *[#24036=-0.0772269] *[#24039=-0.0772289] *[#24058=-0.0772305] *[#24065=-0.0772312] *[#24066=-0.0772315] *[#24069=-0.0772318] *[#24071=-0.0772323] *[#24076=-0.0772326] *[#24084=-0.0772351] *[#24085=-0.0772364] *[#24090=-0.0772368] *[#24092=-0.0772377] *[#24095=-0.0772399] *[#24113=-0.0772404] *[#24126=-0.0772408] *[#24130=-0.0772408] *[#24140=-0.0772431] *[#24141=-0.0772459] *[#24142=-0.0772502] *[#24143=-0.0772572] *[#24144=-0.0772594] *[#24150=-0.0772621] *[#24151=-0.0772658] *[#24158=-0.0772696] *[#24159=-0.0772713] *[#24164=-0.0772774] *[#24165=-0.077281] *[#24168=-0.0772814] *[#24169=-0.0772815] *[#24174=-0.0772899] *[#24177=-0.0772967] *[#24182=-0.0772997] *[#24183=-0.0773099] *[#24190=-0.0773116] *[#24193=-0.077312] *[#24199=-0.0773196] *[#24210=-0.0773215] *[#24231=-0.0773218] *[#24232=-0.0773239] *[#24250=-0.077324] *[#24253=-0.0773248] *[#24256=-0.0773248] *[#24258=-0.0773249] *[#24262=-0.0773251] *[#24272=-0.0773253] *[#24273=-0.0773254] *[#24277=-0.0773256] *[#24282=-0.0773256] *[#24302=-0.0773257] *[#24317=-0.0773259] *[#24320=-0.077326] *[#24321=-0.077326] *[#24325=-0.0773262] *[#24328=-0.0773263] *[#24333=-0.0773264] *[#24336=-0.0773265] *[#24339=-0.0773267] *[#24342=-0.0773267] *[#24344=-0.0773269] *[#24345=-0.0773273] *[#24348=-0.0773278] *[#24349=-0.0773281] *[#24350=-0.0773282] *[#24352=-0.0773284] *[#24353=-0.0773285] *[#24355=-0.0773286] *[#24356=-0.0773289] *[#24359=-0.0773289] *[#24362=-0.0773292] *[#24363=-0.0773294] *[#24368=-0.0773296] *[#24369=-0.0773298] *[#24370=-0.0773302] *[#24375=-0.0773305] *[#24380=-0.0773306] *[#24381=-0.0773309] *[#24386=-0.0773309] *[#24388=-0.0773313] *[#24391=-0.0773314] *[#24394=-0.0773316] *[#24401=-0.0773316] *[#24402=-0.077332] *[#24413=-0.0773323] *[#24414=-0.0773325] *[#24417=-0.0773327] *[#24418=-0.077333] *[#24419=-0.0773336] *[#24420=-0.0773345] *[#24423=-0.0773352] *[#24424=-0.0773361] *[#24425=-0.0773368] *[#24426=-0.0773372] *[#24429=-0.0773373] *[#24430=-0.0773377] *[#24437=-0.0773388] *[#24440=-0.0773394] *[#24441=-0.0773398] *[#24444=-0.0773399] *[#24445=-0.0773402] *[#24446=-0.0773406] *[#24447=-0.077341] *[#24449=-0.0773415] *[#24456=-0.0773421] *[#24457=-0.0773421] *[#24458=-0.0773423] *[#24459=-0.0773424] *[#24461=-0.0773425] *[#24462=-0.0773427] *[#24465=-0.0773433] *[#24468=-0.0773434] *[#24469=-0.0773434] *[#24471=-0.0773441] *[#24472=-0.0773442] *[#24473=-0.0773448] *[#24474=-0.0773449] *[#24478=-0.0773452] *[#24479=-0.0773459] *[#24484=-0.077346] *[#24486=-0.0773467] *[#24487=-0.0773469] *[#24490=-0.0773473] *[#24491=-0.0773474] *[#24493=-0.0773476] *[#24494=-0.0773479] *[#24509=-0.0773483] *[#24510=-0.0773486] *[#24511=-0.0773486] *[#24512=-0.077349] *[#24514=-0.0773492] *[#24517=-0.0773494] *[#24518=-0.0773496] *[#24523=-0.0773497] *[#24524=-0.0773499] *[#24527=-0.07735] *[#24530=-0.0773502] *[#24531=-0.0773503] *[#24536=-0.0773504] *[#24539=-0.0773506] *[#24542=-0.0773508] *[#24545=-0.0773509] *[#24546=-0.0773511] *[#24549=-0.0773512] *[#24550=-0.0773514] *[#24551=-0.0773515] *[#24552=-0.0773518] *[#24557=-0.0773522] *[#24558=-0.0773523] *[#24559=-0.0773524] *[#24560=-0.0773527] *[#24561=-0.0773531] *[#24565=-0.0773532] *[#24566=-0.0773535] *[#24569=-0.0773541] *[#24570=-0.0773543] *[#24575=-0.0773548] *[#24580=-0.0773549] *[#24583=-0.0773553] *[#24586=-0.0773554] *[#24587=-0.0773558] *[#24588=-0.0773562] *[#24591=-0.0773562] *[#24593=-0.0773563] *[#24598=-0.0773564] *[#24601=-0.0773567] *[#24604=-0.0773567] *[#24606=-0.0773567] *[#24607=-0.0773568] *[#24612=-0.0773572] *[#24613=-0.0773575] *[#24618=-0.0773579] *[#24619=-0.0773583] *[#24620=-0.0773584] *[#24622=-0.0773587] *[#24623=-0.077359] *[#24628=-0.0773594] *[#24631=-0.0773595] *[#24632=-0.0773598] *[#24633=-0.0773601] *[#24636=-0.0773602] *[#24637=-0.0773605] *[#24638=-0.0773607] *[#24639=-0.0773608] *[#24640=-0.0773615] *[#24643=-0.0773618] *[#24644=-0.0773625] *[#24645=-0.0773636] *[#24647=-0.0773648] *[#24652=-0.077365] *[#24655=-0.0773651] *[#24658=-0.0773655] *[#24663=-0.0773659] *[#24664=-0.0773662] *[#24665=-0.0773665] *[#24666=-0.0773669] *[#24667=-0.0773675] *[#24668=-0.0773676] *[#24669=-0.0773685] *[#24672=-0.0773692] *[#24673=-0.0773693] *[#24675=-0.0773697] *[#24676=-0.0773701] *[#24683=-0.0773707] *[#24685=-0.0773707] *[#24686=-0.0773709] *[#24688=-0.0773711] *[#24690=-0.0773711] *[#24691=-0.0773715] *[#24695=-0.0773717] *[#24696=-0.077372] *[#24697=-0.0773721] *[#24701=-0.0773729] *[#24702=-0.0773731] *[#24703=-0.0773735] *[#24704=-0.0773748] *[#24705=-0.0773757] *[#24706=-0.077377] *[#24708=-0.0773772] *[#24709=-0.0773777] *[#24710=-0.0773789] *[#24711=-0.0773797] *[#24712=-0.077381] *[#24714=-0.0773819] *[#24719=-0.0773831] *[#24722=-0.0773832] *[#24723=-0.0773835] *[#24724=-0.0773837] *[#24725=-0.0773838] *[#24726=-0.0773844] *[#24735=-0.0773845] *[#24736=-0.0773848] *[#24741=-0.0773851] *[#24742=-0.0773857] *[#24743=-0.0773862] *[#24746=-0.0773863] *[#24749=-0.0773867] *[#24750=-0.077387] *[#24751=-0.0773876] *[#24752=-0.0773887] *[#24753=-0.0773908] *[#24754=-0.0773935] *[#24756=-0.077394] *[#24759=-0.0773952] *[#24762=-0.077396] *[#24767=-0.0773966] *[#24768=-0.0773969] *[#24769=-0.0773975] *[#24770=-0.0773983] *[#24771=-0.0773988] *[#24772=-0.0773993] *[#24774=-0.0773994] *[#24775=-0.0773996] *[#24780=-0.0773996] *[#24781=-0.0774001] *[#24784=-0.0774002] *[#24786=-0.0774006] *[#24789=-0.0774009] *[#24790=-0.077401] *[#24792=-0.0774014] *[#24793=-0.0774021] *[#24796=-0.0774026] *[#24797=-0.0774028] *[#24800=-0.077403] *[#24806=-0.0774032] *[#24809=-0.0774033] *[#24810=-0.0774035] *[#24812=-0.0774036] *[#24813=-0.0774037] *[#24816=-0.0774039] *[#24817=-0.0774041] *[#24818=-0.0774044] *[#24819=-0.0774048] *[#24820=-0.0774051] *[#24821=-0.0774055] *[#24822=-0.0774062] *[#24823=-0.0774064] *[#24824=-0.0774067] *[#24829=-0.0774075] *[#24833=-0.0774076] *[#24836=-0.0774077] *[#24837=-0.0774082] *[#24842=-0.0774084] *[#24843=-0.0774086] *[#24844=-0.0774087] *[#24845=-0.0774087] *[#24847=-0.0774089] *[#24848=-0.077409] *[#24849=-0.0774096] *[#24852=-0.0774097] *[#24858=-0.0774101] *[#24863=-0.0774102] *[#24865=-0.0774105] *[#24870=-0.0774105] *[#24874=-0.0774107] *[#24877=-0.0774111] *[#24878=-0.0774112] *[#24881=-0.0774114] *[#24884=-0.0774116] *[#24885=-0.0774119] *[#24886=-0.0774122] *[#24887=-0.0774128] *[#24892=-0.0774132] *[#24893=-0.0774134] *[#24894=-0.0774138] *[#24895=-0.0774141] *[#24896=-0.0774146] *[#24897=-0.0774147] *[#24901=-0.0774152] *[#24904=-0.0774156] *[#24905=-0.0774157] *[#24908=-0.077416] *[#24909=-0.0774165] *[#24912=-0.0774167] *[#24913=-0.0774169] *[#24914=-0.0774172] *[#24915=-0.0774173] *[#24916=-0.0774177] *[#24917=-0.0774177] *[#24921=-0.0774184] *[#24922=-0.0774186] *[#24923=-0.0774189] *[#24924=-0.0774189] *[#24925=-0.0774197] *[#24928=-0.0774198] *[#24929=-0.0774201] *[#24930=-0.0774206] *[#24931=-0.0774211] *[#24932=-0.0774222] *[#24933=-0.0774243] *[#24934=-0.0774274] *[#24935=-0.077433] *[#24943=-0.0774331] *[#24945=-0.0774344] *[#24950=-0.0774345] *[#24951=-0.0774351] *[#24953=-0.077438] *[#24954=-0.0774393] *[#24955=-0.0774403] *[#24956=-0.0774406] *[#24959=-0.0774409] *[#24960=-0.0774425] *[#24963=-0.0774435] *[#24968=-0.0774444] *[#24969=-0.0774446] *[#24974=-0.0774451] *[#24975=-0.0774451] *[#24976=-0.0774451] *[#24977=-0.0774455] *[#24979=-0.0774456] *[#24980=-0.0774456] *[#24984=-0.077446] *[#24988=-0.0774465] *[#24991=-0.0774474] *[#24993=-0.0774476] *[#24997=-0.077448] *[#25000=-0.0774482] *[#25001=-0.0774484] *[#25003=-0.0774485] *[#25004=-0.0774485] *[#25005=-0.0774489] *[#25008=-0.0774492] *[#25009=-0.0774492] *[#25010=-0.0774494] *[#25011=-0.0774497] *[#25013=-0.07745] *[#25018=-0.0774503] *[#25020=-0.0774503] *[#25023=-0.0774505] *[#25025=-0.0774508] *[#25028=-0.0774509] *[#25044=-0.0774511] *[#25045=-0.0774513] *[#25047=-0.0774514] *[#25048=-0.0774523] *[#25050=-0.0774525] *[#25052=-0.0774528] *[#25053=-0.0774534] *[#25060=-0.0774536] *[#25061=-0.0774538] *[#25062=-0.077454] *[#25065=-0.0774546] *[#25066=-0.0774546] *[#25070=-0.0774547] *[#25072=-0.0774547] *[#25073=-0.0774547] *[#25075=-0.0774553] *[#25078=-0.0774556] *[#25083=-0.0774556] *[#25086=-0.0774558] *[#25090=-0.0774559] *[#25099=-0.0774561] *[#25102=-0.0774564] *[#25109=-0.0774565] *[#25110=-0.0774567] *[#25119=-0.0774571] *[#25122=-0.0774575] *[#25123=-0.0774582] *[#25134=-0.0774585] *[#25135=-0.0774589] *[#25136=-0.0774592] *[#25137=-0.0774597] *[#25140=-0.07746] *[#25141=-0.0774604] *[#25142=-0.077461] *[#25143=-0.0774612] *[#25144=-0.0774614] *[#25145=-0.0774622] *[#25146=-0.0774634] *[#25147=-0.0774646] *[#25148=-0.0774668] *[#25149=-0.0774676] *[#25150=-0.0774707] *[#25154=-0.0774711] *[#25155=-0.0774719] *[#25158=-0.0774731] *[#25161=-0.0774734] *[#25162=-0.0774735] *[#25163=-0.0774739] *[#25164=-0.0774742] *[#25168=-0.0774744] *[#25169=-0.0774748] *[#25171=-0.0774749] *[#25172=-0.0774751] *[#25175=-0.0774757] *[#25176=-0.0774766] *[#25177=-0.0774783] *[#25178=-0.0774797] *[#25181=-0.0774807] *[#25182=-0.0774815] *[#25183=-0.0774841] *[#25186=-0.0774848] *[#25187=-0.0774853] *[#25188=-0.0774866] *[#25189=-0.0774891] *[#25190=-0.0774898] *[#25193=-0.0774939] *[#25201=-0.0774944] *[#25202=-0.0774959] *[#25203=-0.0774969] *[#25208=-0.0774976] *[#25209=-0.0774978] *[#25210=-0.0774981] *[#25211=-0.0774983] *[#25212=-0.0774997] *[#25213=-0.0775003] *[#25214=-0.0775008] *[#25215=-0.0775023] *[#25218=-0.0775034] *[#25219=-0.0775038] *[#25223=-0.0775045] *[#25224=-0.0775052] *[#25225=-0.0775056] *[#25226=-0.0775061] *[#25228=-0.0775065] *[#25229=-0.0775072] *[#25230=-0.0775082] *[#25231=-0.0775091] *[#25233=-0.0775097] *[#25236=-0.0775105] *[#25237=-0.077511] *[#25240=-0.0775115] *[#25241=-0.0775122] *[#25244=-0.0775126] *[#25245=-0.0775131] *[#25246=-0.0775134] *[#25247=-0.0775139] *[#25248=-0.0775148] *[#25251=-0.0775156] *[#25252=-0.0775164] *[#25253=-0.0775166] *[#25254=-0.0775182] *[#25255=-0.0775194] *[#25258=-0.07752] *[#25259=-0.0775205] *[#25262=-0.0775205] *[#25266=-0.0775208] *[#25267=-0.0775209] *[#25268=-0.0775216] *[#25271=-0.0775217] *[#25276=-0.077522] *[#25277=-0.0775225] *[#25280=-0.077523] *[#25281=-0.0775234] *[#25282=-0.0775241] *[#25283=-0.0775244] *[#25284=-0.0775258] *[#25285=-0.0775269] *[#25286=-0.0775279] *[#25287=-0.077531] *[#25298=-0.0775315] *[#25301=-0.0775321] *[#25303=-0.0775323] *[#25304=-0.0775323] *[#25306=-0.0775327] *[#25307=-0.0775328] *[#25309=-0.0775329] *[#25314=-0.0775335] *[#25316=-0.0775336] *[#25323=-0.0775338] *[#25326=-0.0775339] *[#25327=-0.0775342] *[#25328=-0.0775343] *[#25334=-0.0775344] *[#25335=-0.0775351] *[#25338=-0.0775355] *[#25339=-0.0775355] *[#25341=-0.0775356] *[#25343=-0.0775358] *[#25344=-0.077536] *[#25346=-0.077536] *[#25348=-0.0775361] *[#25354=-0.0775362] *[#25355=-0.0775365] *[#25357=-0.0775366] *[#25358=-0.0775372] *[#25363=-0.0775373] *[#25365=-0.0775377] *[#25366=-0.0775378] *[#25368=-0.0775378] *[#25373=-0.0775382] *[#25376=-0.0775382] *[#25377=-0.0775384] *[#25379=-0.0775389] *[#25380=-0.0775391] *[#25381=-0.0775394] *[#25382=-0.0775396] *[#25383=-0.07754] *[#25384=-0.0775401] *[#25385=-0.0775405] *[#25390=-0.0775406] *[#25392=-0.077541] *[#25393=-0.0775414] *[#25394=-0.0775415] *[#25397=-0.0775417] *[#25398=-0.0775421] *[#25399=-0.0775426] *[#25401=-0.0775427] *[#25402=-0.0775431] *[#25411=-0.0775434] *[#25415=-0.0775435] *[#25420=-0.0775438] *[#25421=-0.077544] *[#25422=-0.0775443] *[#25423=-0.0775444] *[#25428=-0.0775446] *[#25429=-0.0775448] *[#25432=-0.0775449] *[#25434=-0.0775453] *[#25438=-0.077546] *[#25441=-0.0775461] *[#25443=-0.0775463] *[#25448=-0.0775466] *[#25457=-0.0775466] *[#25459=-0.077547] *[#25462=-0.0775471] *[#25463=-0.0775475] *[#25464=-0.0775478] *[#25467=-0.0775483] *[#25468=-0.0775491] *[#25469=-0.07755] *[#25470=-0.0775507] *[#25471=-0.077552] *[#25472=-0.0775532] *[#25473=-0.0775548] *[#25474=-0.0775569] *[#25475=-0.0775604] *[#25476=-0.0775673] *[#25477=-0.0775697] *[#25480=-0.0775704] *[#25481=-0.0775714] *[#25483=-0.0775729] *[#25484=-0.0775732] *[#25487=-0.0775749] *[#25488=-0.0775762] *[#25489=-0.0775779] *[#25490=-0.0775826] *[#25495=-0.0775839] *[#25496=-0.0775855] *[#25500=-0.0775863] *[#25502=-0.0775867] *[#25505=-0.0775881] *[#25506=-0.0775882] *[#25508=-0.0775883] *[#25509=-0.0775891] *[#25510=-0.0775896] *[#25511=-0.0775899] *[#25512=-0.0775902] *[#25513=-0.0775903] *[#25515=-0.0775908] *[#25518=-0.0775913] *[#25521=-0.0775919] *[#25522=-0.0775924] *[#25523=-0.0775927] *[#25524=-0.0775933] *[#25525=-0.0775936] *[#25528=-0.0775942] *[#25529=-0.0775943] *[#25532=-0.0775944] *[#25534=-0.0775946] *[#25535=-0.077595] *[#25537=-0.0775954] *[#25538=-0.0775954] *[#25540=-0.0775955] *[#25544=-0.0775967] *[#25547=-0.0775969] *[#25548=-0.0775971] *[#25552=-0.0775974] *[#25553=-0.0775979] *[#25554=-0.0775986] *[#25555=-0.0775989] *[#25564=-0.0775994] *[#25565=-0.0775998] *[#25569=-0.0776002] *[#25570=-0.0776004] *[#25573=-0.0776005] *[#25574=-0.0776005] *[#25579=-0.077601] *[#25584=-0.0776011] *[#25588=-0.0776015] *[#25590=-0.0776016] *[#25593=-0.0776019] *[#25594=-0.077602] *[#25597=-0.0776022] *[#25601=-0.0776022] *[#25606=-0.0776025] *[#25613=-0.077603] *[#25614=-0.0776033] *[#25616=-0.0776034] *[#25619=-0.0776034] *[#25620=-0.0776038] *[#25623=-0.0776041] *[#25628=-0.0776041] *[#25629=-0.0776043] *[#25640=-0.0776048] *[#25641=-0.0776053] *[#25642=-0.0776062] *[#25643=-0.0776069] *[#25644=-0.0776072] *[#25645=-0.077608] *[#25646=-0.0776086] *[#25649=-0.0776088] *[#25650=-0.0776092] *[#25651=-0.0776092] *[#25653=-0.0776099] *[#25654=-0.0776106] *[#25655=-0.0776116] *[#25656=-0.0776125] *[#25661=-0.0776128] *[#25662=-0.077613] *[#25663=-0.0776132] *[#25664=-0.0776136] *[#25665=-0.0776141] *[#25674=-0.0776143] *[#25683=-0.0776143] *[#25689=-0.0776147] *[#25692=-0.0776149] *[#25693=-0.077615] *[#25694=-0.077615] *[#25696=-0.0776153] *[#25702=-0.0776154] *[#25705=-0.0776159] *[#25706=-0.0776163] *[#25708=-0.0776163] *[#25711=-0.0776164] *[#25712=-0.0776168] *[#25713=-0.0776173] *[#25718=-0.0776173] *[#25720=-0.0776176] *[#25721=-0.0776179] *[#25722=-0.0776179] *[#25726=-0.0776183] *[#25733=-0.0776187] *[#25736=-0.0776188] *[#25737=-0.0776188] *[#25738=-0.0776189] *[#25739=-0.0776192] *[#25740=-0.0776194] *[#25743=-0.0776199] *[#25750=-0.0776203] *[#25753=-0.0776205] *[#25756=-0.0776207] *[#25757=-0.077621] *[#25758=-0.0776215] *[#25759=-0.0776218] *[#25761=-0.0776218] *[#25764=-0.0776225] *[#25773=-0.0776227] *[#25774=-0.0776228] *[#25775=-0.0776231] *[#25778=-0.0776232] *[#25779=-0.0776234] *[#25780=-0.0776238] *[#25789=-0.0776242] *[#25798=-0.0776243] *[#25810=-0.0776248] *[#25811=-0.0776249] *[#25819=-0.0776252] *[#25820=-0.0776253] *[#25824=-0.0776254] *[#25827=-0.0776256] *[#25828=-0.0776257] *[#25830=-0.0776258] *[#25831=-0.0776259] *[#25833=-0.0776262] *[#25834=-0.0776264] *[#25839=-0.0776268] *[#25840=-0.0776276] *[#25842=-0.0776278] *[#25847=-0.0776282] *[#25848=-0.0776285] *[#25849=-0.0776288] *[#25850=-0.077629] *[#25851=-0.0776295] *[#25852=-0.0776296] *[#25854=-0.0776301] *[#25855=-0.0776304] *[#25856=-0.0776307] *[#25857=-0.0776308] *[#25859=-0.0776314] *[#25860=-0.0776322] *[#25861=-0.0776329] *[#25862=-0.0776336] *[#25867=-0.0776336] *[#25869=-0.0776342] *[#25870=-0.0776345] *[#25871=-0.077635] *[#25872=-0.0776353] *[#25873=-0.0776358] *[#25881=-0.0776365] *[#25882=-0.0776374] *[#25883=-0.0776377] *[#25884=-0.0776381] *[#25885=-0.0776383] *[#25886=-0.0776395] *[#25893=-0.0776395] *[#25895=-0.0776396] *[#25897=-0.0776399] *[#25898=-0.0776401] *[#25899=-0.0776403] *[#25900=-0.0776404] *[#25902=-0.0776407] *[#25903=-0.0776408] *[#25904=-0.0776411] *[#25909=-0.0776412] *[#25910=-0.0776414] *[#25911=-0.0776416] *[#25917=-0.0776416] *[#25919=-0.0776417] *[#25920=-0.0776418] *[#25924=-0.077642] *[#25925=-0.0776421] *[#25927=-0.0776427] *[#25930=-0.0776429] *[#25931=-0.0776434] *[#25934=-0.0776435] *[#25939=-0.0776437] *[#25942=-0.0776438] *[#25945=-0.0776441] *[#25946=-0.0776443] *[#25957=-0.0776445] *[#25964=-0.0776447] *[#25967=-0.0776449] *[#25971=-0.0776451] *[#25976=-0.0776454] *[#25977=-0.0776456] *[#25982=-0.0776456] *[#25983=-0.077646] *[#25984=-0.0776461] *[#25996=-0.0776462] *[#26001=-0.0776464] *[#26002=-0.0776466] *[#26003=-0.0776467] *[#26004=-0.0776471] *[#26005=-0.0776472] *[#26007=-0.0776473] *[#26008=-0.0776474] *[#26009=-0.0776477] *[#26010=-0.077648] *[#26011=-0.0776483] *[#26012=-0.0776488] *[#26013=-0.0776498] *[#26014=-0.0776509] *[#26015=-0.0776538] *[#26026=-0.0776542] *[#26027=-0.0776555] *[#26028=-0.0776564] *[#26031=-0.0776565] *[#26034=-0.0776567] *[#26037=-0.0776575] *[#26042=-0.0776578] *[#26043=-0.077658] *[#26044=-0.077658] *[#26046=-0.0776582] *[#26051=-0.0776587] *[#26055=-0.0776588] *[#26056=-0.0776588] *[#26060=-0.0776591] *[#26061=-0.0776592] *[#26062=-0.0776592] *[#26065=-0.0776596] *[#26066=-0.0776599] *[#26067=-0.0776601] *[#26070=-0.0776602] *[#26071=-0.0776603] *[#26072=-0.0776607] *[#26073=-0.0776607] *[#26075=-0.0776608] *[#26076=-0.077661] *[#26079=-0.0776613] *[#26080=-0.0776616] *[#26081=-0.0776617] *[#26083=-0.0776624] *[#26086=-0.0776627] *[#26091=-0.0776628] *[#26097=-0.0776631] *[#26102=-0.0776631] *[#26104=-0.0776633] *[#26109=-0.0776635] *[#26114=-0.0776635] *[#26119=-0.0776637] *[#26122=-0.0776642] *[#26123=-0.0776646] *[#26124=-0.0776646] *[#26126=-0.0776652] *[#26129=-0.0776654] *[#26132=-0.0776656] *[#26133=-0.0776656] *[#26134=-0.0776659] *[#26137=-0.0776659] *[#26141=-0.077666] *[#26142=-0.0776662] *[#26145=-0.0776667] *[#26146=-0.077667] *[#26147=-0.0776672] *[#26150=-0.0776674] *[#26151=-0.0776677] *[#26152=-0.0776683] *[#26153=-0.0776685] *[#26154=-0.0776687] *[#26156=-0.0776687] *[#26158=-0.0776696] *[#26159=-0.0776698] *[#26160=-0.0776699] *[#26161=-0.0776699] *[#26162=-0.07767] *[#26163=-0.0776703] *[#26164=-0.0776704] *[#26172=-0.0776707] *[#26173=-0.0776708] *[#26174=-0.077671] *[#26177=-0.0776711] *[#26178=-0.0776715] *[#26181=-0.0776716] *[#26186=-0.0776717] *[#26190=-0.0776718] *[#26195=-0.077672] *[#26198=-0.0776722] *[#26199=-0.0776722] *[#26205=-0.0776723] *[#26208=-0.0776726] *[#26209=-0.0776728] *[#26210=-0.0776729] *[#26215=-0.077673] *[#26219=-0.0776731] *[#26223=-0.0776731] *[#26227=-0.0776731] *[#26237=-0.0776732] *[#26238=-0.0776734] *[#26239=-0.0776735] *[#26242=-0.0776736] *[#26243=-0.0776736] *[#26245=-0.0776738] *[#26246=-0.0776738] *[#26249=-0.0776742] *[#26256=-0.0776744] *[#26261=-0.0776746] *[#26292=-0.0776747] *[#26295=-0.0776749] *[#26300=-0.077675] *[#26306=-0.0776751] *[#26313=-0.0776753] *[#26314=-0.0776753] *[#26317=-0.0776754] *[#26318=-0.0776755] *[#26320=-0.0776757] *[#26323=-0.0776759] *[#26324=-0.0776761] *[#26325=-0.0776762] *[#26326=-0.0776763] *[#26327=-0.0776764] *[#26328=-0.0776764] *[#26331=-0.0776768] *[#26332=-0.0776769] *[#26333=-0.077677] *[#26334=-0.0776778] *[#26335=-0.0776786] *[#26336=-0.0776796] *[#26339=-0.0776796] *[#26341=-0.07768] *[#26345=-0.07768] *[#26346=-0.0776808] *[#26353=-0.0776812] *[#26354=-0.0776812] *[#26356=-0.0776813] *[#26358=-0.0776816] *[#26359=-0.0776817] *[#26361=-0.0776821] *[#26362=-0.0776824] *[#26363=-0.0776825] *[#26364=-0.0776831] *[#26365=-0.0776834] *[#26366=-0.0776835] *[#26367=-0.0776841] *[#26368=-0.0776849] *[#26373=-0.0776853] *[#26374=-0.0776856] *[#26375=-0.0776858] *[#26376=-0.0776865] *[#26377=-0.0776873] *[#26378=-0.077689] *[#26379=-0.0776906] *[#26387=-0.0776912] *[#26389=-0.0776919] *[#26390=-0.0776931] *[#26397=-0.0776934] *[#26400=-0.0776942] *[#26405=-0.0776944] *[#26412=-0.0776946] *[#26413=-0.0776946] *[#26427=-0.0776948] *[#26428=-0.0776949] *[#26441=-0.0776954] *[#26462=-0.0776954] *[#26471=-0.0776956] *[#26476=-0.0776957] *[#26477=-0.0776957] *[#26491=-0.0776957] *[#26499=-0.0776957] *[#26501=-0.0776959] *[#26523=-0.0776961] *[#26528=-0.0776962] *[#26541=-0.0776963] *[#26546=-0.0776963] *[#26550=-0.0776965] *[#26555=-0.0776965] *[#26557=-0.0776966] *[#26562=-0.0776967] *[#26563=-0.0776968] *[#26564=-0.0776968] *[#26565=-0.077697] *[#26568=-0.0776972] *[#26569=-0.0776974] *[#26574=-0.0776974] *[#26578=-0.0776978] *[#26581=-0.0776978] *[#26589=-0.077698] *[#26592=-0.077698] *[#26599=-0.0776982] *[#26600=-0.0776983] *[#26601=-0.0776983] *[#26604=-0.0776984] *[#26608=-0.0776986] *[#26615=-0.077699] *[#26618=-0.077699] *[#26619=-0.0776991] *[#26620=-0.0776992] *[#26623=-0.0776992] *[#26624=-0.0776994] *[#26631=-0.0776995] *[#26634=-0.0776996] *[#26635=-0.0776996] *[#26637=-0.0776998] *[#26638=-0.0776998] *[#26639=-0.0776998] *[#26640=-0.0776999] *[#26645=-0.0777001] *[#26648=-0.0777001] *[#26669=-0.0777002] *[#26672=-0.0777003] *[#26675=-0.0777005] *[#26676=-0.0777005] *[#26678=-0.0777007] *[#26679=-0.0777008] *[#26682=-0.0777008] *[#26685=-0.077701] *[#26686=-0.077701] *[#26688=-0.0777014] *[#26689=-0.0777016] *[#26692=-0.0777017] *[#26693=-0.0777017] *[#26699=-0.0777018] *[#26700=-0.0777019] *[#26701=-0.0777019] *[#26705=-0.0777021] *[#26706=-0.0777024] *[#26707=-0.0777025] *[#26708=-0.0777027] *[#26727=-0.0777028] *[#26740=-0.0777028] *[#26742=-0.0777028] *[#26748=-0.0777029] *[#26749=-0.0777029] *[#26761=-0.077703] *[#26771=-0.077703] *[#26774=-0.0777031] *[#26781=-0.0777032] *[#26790=-0.0777033] *[#26793=-0.0777033] *[#26797=-0.0777034] *[#26801=-0.0777036] *[#26802=-0.0777037] *[#26806=-0.0777038] *[#26807=-0.0777038] *[#26809=-0.077704] *[#26810=-0.0777041] *[#26811=-0.0777042] *[#26818=-0.0777044] *[#26821=-0.0777045] *[#26824=-0.0777047] *[#26863=-0.0777047] *[#26872=-0.0777049] *[#26874=-0.077705] *[#26900=-0.0777051] *[#26919=-0.0777051] *[#26928=-0.0777051] 
 + - Final    cost = -0.077705 ; 4174 funcs
 + Final fine fit Parameters:
       x-shift=  9.2963   y-shift= -4.6021   z-shift=  5.4843  ...  enorm= 11.7336 mm
       z-angle= -2.5575   x-angle= 10.0351   y-angle=  2.5706  ...  total= 10.6144 deg
       x-scale=  0.9870   y-scale=  0.9359   z-scale=  0.8880  ...  vol3D=  0.8203=(0.9361)^3 [base bigger than source]
     y/x-shear= -0.0422 z/x-shear= -0.0242 z/y-shear=  0.1111
[7m*+ WARNING:[0m Parameter z/y-shear =   0.11110 is close to edge of its search range  -0.11110 ..   0.11110
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 9.2963 -4.6021 5.4843 -2.5575 10.0351 2.5706 0.9870 0.9359 0.8880 -0.0422 -0.0242 0.1111
++ Unloading unneeded data
++ Output dataset ./FT_anat_flip_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./FT_anat_flip__al_junk_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 57.3
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_noflipcosts.1D -weight ./vr_base_min_outlier_unif_ts_ns_wt+orig -source ./FT_anat_al_junk+orig -base ./vr_base_min_outlier_unif_ts_ns+orig -cmass -master BASE -mast_dxyz 0.937500 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./FT_anat_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_unif_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 2043271 voxels in -source_automask+2
++ Zero-pad: ybot=1 ytop=9
++ Zero-pad: zbot=10 ztop=10
++ 64360 voxels [16.9%] in weight mask
++ Number of points for matching = 64360
++ Local correlation: blok type = 'TOHD(14.6557)'
++ base center of mass = 39.341 45.910 25.052 (index)
 + source center of mass = 116.137 132.036 44.463 (index)
 + source-target CM = -0.372 -0.780 -4.692 (xyz)
 + estimated center of mass shifts = -0.372 -0.780 -4.692
++ shift param auto-range: -70.1..69.4 -79.3..77.8 -54.8..45.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.371872 .. 9.628128  center = -0.371872
 + Range param#2 [y-shift] = -10.780472 .. 9.219528  center = -0.780472
 + Range param#3 [z-shift] = -14.691622 .. 5.308378  center = -4.691622
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.371872 .. 39.628128  center = -0.371872
 + Range param#2 [y-shift] = -40.780472 .. 39.219528  center = -0.780472
 + Range param#3 [z-shift] = -44.691620 .. 35.308380  center = -4.691620
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -40.372 ..   39.628
 +       y-shift =  -40.780 ..   39.220
 +       z-shift =  -44.692 ..   35.308
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.9375 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 2043271 [out of 5853850] voxels
 + base mask has 82206 [out of 381600] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=244 usiz=373
 + - copying weight image
 + - using 64360 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_noflipcosts.1D'
 +  - histogram: source clip 255.563 .. 1016.48; base clip 0.344899 .. 1.21771
 +  - versus source range 0.000178859 .. 1044.86; base range 0 .. 1.49956
 + 53740 total points stored in 107 'TOHD(14.6898)' bloks (0 duplicates)
++ -allcostX1D finished
#Script is running (command trimmed):
  3dAllineate -allcostX1D IDENTITY __tt_lr_flipcosts.1D -weight ./vr_base_min_outlier_unif_ts_ns_wt+orig -source ./FT_anat_flip_al_junk+orig -base ./vr_base_min_outlier_unif_ts_ns+orig -cmass -master BASE -mast_dxyz 0.937500 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./FT_anat_flip_al_junk+orig.HEAD
++ Base dataset:   ./vr_base_min_outlier_unif_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 2200636 voxels in -source_automask+2
++ Zero-pad: ybot=1 ytop=9
++ Zero-pad: zbot=10 ztop=10
++ 64360 voxels [16.9%] in weight mask
++ Number of points for matching = 64360
++ Local correlation: blok type = 'TOHD(14.6557)'
++ base center of mass = 39.341 45.910 25.052 (index)
 + source center of mass = 114.776 133.294 44.967 (index)
 + source-target CM = -1.648 0.399 -4.219 (xyz)
 + estimated center of mass shifts = -1.648 0.399 -4.219
++ shift param auto-range: -71.4..68.1 -78.2..79.0 -54.3..45.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -11.647820 .. 8.352180  center = -1.647820
 + Range param#2 [y-shift] = -9.601189 .. 10.398811  center = 0.398811
 + Range param#3 [z-shift] = -14.219389 .. 5.780611  center = -4.219389
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -41.647820 .. 38.352180  center = -1.647820
 + Range param#2 [y-shift] = -39.601189 .. 40.398811  center = 0.398811
 + Range param#3 [z-shift] = -44.219391 .. 35.780609  center = -4.219391
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000094
++ Final parameter search ranges:
 +       x-shift =  -41.648 ..   38.352
 +       y-shift =  -39.601 ..   40.399
 +       z-shift =  -44.219 ..   35.781
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
[7m*+ WARNING:[0m No output dataset will be calculated
[7m*+ WARNING:[0m -mast_dxyz 0.9375 option was meaningless :-(
++ OpenMP thread count = 15
 + source mask has 2200636 [out of 5853850] voxels
 + base mask has 82206 [out of 381600] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=259 usiz=366
 + - copying weight image
 + - using 64360 points from base image [use_all=0]
 + * Exit alignment setup routine
++ Writing -allcostX1D results to '__tt_lr_flipcosts.1D'
 +  - histogram: source clip 257.157 .. 1012.87; base clip 0.344899 .. 1.21771
 +  - versus source range 0.000212554 .. 1057.1; base range 0 .. 1.49956
 + 53740 total points stored in 107 'TOHD(14.6898)' bloks (0 duplicates)
++ -allcostX1D finished
No flip cost is -0.219080 for lpc+ZZ cost function
Flip cost is -0.076698 for lpc+ZZ cost function
Data does not need flipping
#++ Creating final output: skullstripped anat data
copying from dataset /home/jlefortb/reproduction_afni/afni_tuto_w_afni/FT.results/FT_anat_unflipped_ns+orig to /home/jlefortb/reproduction_afni/afni_tuto_w_afni/FT.results/FT_anat_ns+orig
#Script is running (command trimmed):
  3dcopy ./FT_anat_unflipped_ns+orig FT_anat_ns
++ 3dcopy: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat FT_anat+orig -save_skullstrip \
 -suffix _al_junk -epi vr_base_min_outlier_unif+orig -epi_base 0 \
 -epi_strip 3dAutomask -cost lpc+ZZ -giant_move -check_flip -volreg off \
 -tshift off" \
 ./FT_anat_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier_unif*
#Script is running:
  \rm -f ./__tt_FT_anat*

# Finished alignment successfully

@auto_tlrc -base TT_N27+tlrc -input FT_anat_ns+orig -no_ss
Center distance of 34.909285 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ output dataset: ./__ats_tmp__ref_TT_N27_15pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__ats_tmp__resamp+tlrc.BRIK
Clipping -0.000100 2704.000100 ...
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./__ats_tmp___rs_FT_anat_ns+tlrc.BRIK
++ 3drefit: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_FT_anat_ns+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (cubic final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
RMS[0] = 67.3977 47.9649   ITER = 12/50
67.3977

Warping has converged.

mv: 'FT_anat_ns.Xaff12.1D' and 'FT_anat_ns.Xaff12.1D' are the same file
++ 3dcopy: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ 3dWarp: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad15_FT_anat_ns+orig.HEAD -> __ats_tmp___pad15_FT_anat_ns.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad15_FT_anat_ns+orig.BRIK.gz -> __ats_tmp___pad15_FT_anat_ns.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ output dataset: ./__ats_tmp___upad15_FT_anat_ns+orig.BRIK
++ 3drefit: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_FT_anat_ns+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_FT_anat_ns+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset FT_anat_ns+orig __ats_tmp___upad15_FT_anat_ns+tlrc
++ 3drefit: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad15_FT_anat_ns+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Warning: ignoring +tlrc on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___upad15_FT_anat_ns+tlrc.HEAD -> FT_anat_ns+tlrc.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___upad15_FT_anat_ns+tlrc.BRIK -> FT_anat_ns+tlrc.BRIK
Cleanup ...
cat_matvec FT_anat_ns+tlrc::WARP_DATA -I
if ( ! -f FT_anat_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.FT.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb01.FT.r01.tshift+orig.BRIK
++ Edging: x=4 y=4 z=2
++ Creating mask for -maxdisp
 + Automask has 66765 voxels
 + 8106 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.127  pitch=-0.969  yaw=-0.105  dS=+0.013  dL=-0.051  dP=-0.443
++ Mean: roll=-0.071  pitch=+0.194  yaw=-0.044  dS=+0.214  dL=+0.022  dP=-0.321
++ Max : roll=+0.022  pitch=+0.396  yaw=+0.030  dS=+0.393  dL=+0.087  dP=-0.176
++ Max displacements (mm) for each sub-brick:
 0.83(0.00) 0.91(0.10) 0.91(0.03) 0.89(0.05) 0.87(0.07) 0.82(0.11) 0.79(0.04) 0.84(0.12) 0.83(0.03) 0.77(0.08) 0.80(0.08) 0.81(0.09) 0.77(0.05) 0.82(0.06) 0.76(0.10) 0.79(0.08) 0.83(0.07) 0.79(0.10) 0.76(0.07) 0.83(0.18) 0.80(0.06) 0.74(0.10) 0.77(0.04) 0.72(0.05) 0.74(0.03) 0.76(0.06) 0.76(0.06) 0.74(0.04) 0.78(0.09) 0.74(0.11) 0.71(0.06) 0.78(0.15) 0.74(0.10) 0.73(0.08) 0.75(0.08) 0.74(0.02) 0.69(0.08) 0.67(0.02) 0.67(0.05) 0.71(0.06) 0.70(0.07) 0.85(0.23) 1.95(2.63) 1.86(0.22) 0.84(2.58) 0.70(0.24) 0.74(0.07) 0.69(0.10) 0.68(0.03) 0.69(0.02) 0.63(0.13) 0.63(0.07) 0.62(0.06) 0.62(0.10) 0.57(0.08) 0.56(0.09) 0.57(0.07) 0.56(0.06) 0.68(0.25) 0.61(0.19) 0.56(0.08) 0.68(0.14) 0.66(0.12) 0.64(0.04) 0.63(0.06) 0.69(0.12) 0.59(0.24) 0.55(0.05) 0.62(0.11) 0.65(0.08) 0.62(0.08) 0.64(0.07) 0.71(0.10) 0.64(0.09) 0.80(0.17) 0.87(0.19) 0.80(0.21) 0.82(0.07) 0.72(0.18) 0.71(0.06) 0.73(0.05) 0.71(0.07) 0.73(0.07) 0.75(0.05) 0.75(0.02) 0.70(0.08) 0.69(0.03) 0.71(0.07) 0.69(0.10) 0.66(0.07) 0.70(0.14) 0.72(0.05) 0.71(0.11) 0.74(0.05) 0.74(0.06) 0.75(0.02) 0.72(0.04) 0.68(0.05) 0.69(0.06) 0.69(0.04) 0.69(0.02) 0.68(0.06) 0.70(0.07) 0.75(0.08) 0.72(0.06) 0.76(0.09) 0.70(0.14) 0.73(0.15) 0.70(0.06) 0.67(0.12) 0.68(0.05) 0.73(0.09) 0.76(0.10) 0.70(0.11) 0.72(0.10) 0.69(0.08) 0.68(0.06) 0.70(0.10) 0.67(0.11) 0.68(0.08) 0.72(0.14) 0.72(0.04) 0.70(0.03) 0.67(0.04) 0.70(0.08) 0.66(0.11) 0.64(0.05) 0.62(0.06) 0.62(0.01) 0.64(0.06) 0.64(0.03) 0.62(0.03) 0.62(0.04) 0.65(0.06) 0.61(0.06) 0.65(0.08) 0.68(0.05) 0.66(0.05) 0.69(0.07) 0.65(0.10) 0.61(0.07) 0.62(0.11) 0.59(0.06) 0.55(0.04) 0.60(0.10) 0.55(0.12) 0.58(0.04) 0.65(0.12) 0.68(0.04) 0.71(0.05)
++ Max displacement in automask = 1.95 (mm) at sub-brick 42
++ Max delta displ  in automask = 2.63 (mm) at sub-brick 42
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.FT.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE FT_anat_ns+tlrc::WARP_DATA -I FT_anat_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base FT_anat_ns+tlrc -input pb01.FT.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./pb01.FT.r01.tshift+orig.HEAD
++ Base dataset:   ./FT_anat_ns+tlrc.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -4.190  -22.759   18.872
 +  shift search range is +/- =   51.360   60.990   48.150
 +                                  8.2%    37.3%    39.2%
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 5.2
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dAllineate -base FT_anat_ns+tlrc -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =   -3.376  -34.901   20.689
 +  shift search range is +/- =   51.360   60.990   48.150
 +                                  6.6%    57.2%    43.0%
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.9
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.FT.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb01.FT.r02.tshift+orig.BRIK
++ Edging: x=4 y=4 z=2
++ Creating mask for -maxdisp
 + Automask has 66969 voxels
 + 8176 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.108  pitch=-0.081  yaw=-0.014  dS=-0.159  dL=-0.062  dP=-0.165
++ Mean: roll=+0.016  pitch=+0.070  yaw=+0.026  dS=+0.138  dL=+0.018  dP=-0.041
++ Max : roll=+0.084  pitch=+0.266  yaw=+0.055  dS=+0.267  dL=+0.095  dP=+0.107
++ Max displacements (mm) for each sub-brick:
 0.66(0.00) 0.70(0.09) 0.67(0.07) 0.68(0.02) 0.64(0.06) 0.65(0.13) 0.62(0.08) 0.61(0.05) 0.58(0.07) 0.53(0.09) 0.53(0.06) 0.54(0.09) 0.54(0.07) 0.53(0.03) 0.48(0.08) 0.47(0.05) 0.44(0.07) 0.45(0.06) 0.47(0.10) 0.46(0.07) 0.47(0.09) 0.48(0.12) 0.39(0.10) 0.37(0.05) 0.38(0.04) 0.45(0.07) 0.43(0.09) 0.38(0.12) 0.37(0.05) 0.40(0.09) 0.43(0.04) 0.41(0.05) 0.35(0.07) 0.36(0.13) 0.31(0.08) 0.36(0.05) 0.35(0.02) 0.33(0.06) 0.35(0.11) 0.33(0.09) 0.38(0.07) 0.41(0.04) 0.35(0.12) 0.38(0.07) 0.34(0.05) 0.34(0.10) 0.40(0.09) 0.38(0.11) 0.36(0.06) 0.32(0.14) 0.33(0.05) 0.35(0.04) 0.35(0.05) 0.35(0.05) 0.38(0.09) 0.40(0.15) 0.38(0.09) 0.36(0.04) 0.34(0.04) 0.34(0.05) 0.33(0.04) 0.35(0.03) 0.34(0.05) 0.34(0.03) 0.35(0.09) 0.36(0.06) 0.36(0.03) 0.35(0.05) 0.31(0.06) 0.28(0.09) 0.28(0.04) 0.28(0.10) 0.26(0.07) 0.26(0.04) 0.31(0.14) 0.34(0.09) 0.30(0.09) 0.33(0.09) 0.29(0.12) 0.27(0.07) 0.35(0.10) 0.35(0.04) 0.32(0.10) 0.27(0.07) 0.28(0.03) 0.27(0.05) 0.29(0.08) 0.32(0.08) 0.29(0.05) 0.30(0.08) 0.27(0.09) 0.27(0.08) 0.26(0.06) 0.23(0.07) 0.30(0.17) 0.26(0.16) 0.23(0.07) 0.29(0.11) 0.24(0.11) 0.20(0.08) 0.28(0.11) 0.26(0.05) 0.27(0.12) 0.25(0.10) 0.29(0.08) 0.28(0.06) 0.33(0.09) 0.40(0.12) 0.37(0.06) 0.36(0.06) 0.33(0.06) 0.32(0.05) 0.30(0.06) 0.32(0.06) 0.29(0.10) 0.28(0.03) 0.57(0.56) 0.14(0.49) 0.15(0.20) 0.11(0.17) 0.08(0.05) 0.16(0.10) 0.17(0.11) 0.16(0.07) 0.19(0.07) 0.19(0.14) 0.18(0.04) 0.20(0.09) 0.21(0.07) 0.25(0.09) 0.28(0.14) 0.24(0.12) 0.27(0.07) 0.28(0.42) 0.20(0.17) 0.19(0.18) 0.15(0.11) 0.12(0.07) 0.16(0.10) 0.12(0.08) 0.14(0.03) 0.17(0.08) 0.19(0.03) 0.22(0.05) 0.19(0.04) 0.23(0.15) 0.20(0.14) 0.21(0.03) 0.22(0.13) 0.23(0.04)
++ Max displacement in automask = 0.70 (mm) at sub-brick 1
++ Max delta displ  in automask = 0.56 (mm) at sub-brick 116
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.FT.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE FT_anat_ns+tlrc::WARP_DATA -I FT_anat_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base FT_anat_ns+tlrc -input pb01.FT.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./pb01.FT.r02.tshift+orig.HEAD
++ Base dataset:   ./FT_anat_ns+tlrc.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -4.102  -22.807   18.845
 +  shift search range is +/- =   51.360   60.990   48.150
 +                                  8.0%    37.4%    39.1%
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 5.2
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dAllineate -base FT_anat_ns+tlrc -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =   -3.376  -34.901   20.689
 +  shift search range is +/- =   51.360   60.990   48.150
 +                                  6.6%    57.2%    43.0%
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.8
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.FT.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Reading input dataset ./pb01.FT.r03.tshift+orig.BRIK
++ Edging: x=4 y=4 z=2
++ Creating mask for -maxdisp
 + Automask has 66976 voxels
 + 8084 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.043  pitch=-0.023  yaw=-0.127  dS=-0.387  dL=-0.087  dP=-0.521
++ Mean: roll=+0.066  pitch=+0.150  yaw=-0.040  dS=-0.090  dL=-0.020  dP=-0.120
++ Max : roll=+0.156  pitch=+0.599  yaw=+0.013  dS=+0.082  dL=+0.031  dP=+0.105
++ Max displacements (mm) for each sub-brick:
 0.13(0.00) 0.29(0.21) 0.09(0.21) 0.14(0.05) 0.09(0.07) 0.09(0.06) 0.10(0.06) 0.08(0.05) 0.07(0.05) 0.08(0.03) 0.08(0.03) 0.10(0.06) 0.11(0.08) 0.16(0.15) 0.06(0.14) 0.10(0.07) 0.09(0.14) 0.07(0.09) 0.04(0.05) 0.08(0.06) 0.07(0.08) 0.06(0.12) 0.14(0.17) 0.04(0.11) 0.00(0.04) 0.07(0.07) 0.08(0.06) 0.09(0.07) 0.05(0.06) 0.03(0.03) 0.10(0.10) 0.07(0.08) 0.05(0.04) 0.06(0.05) 0.09(0.08) 0.10(0.06) 0.09(0.06) 0.13(0.07) 0.07(0.13) 0.08(0.06) 0.18(0.12) 0.15(0.05) 0.16(0.05) 0.17(0.15) 0.14(0.09) 0.15(0.09) 0.12(0.07) 0.08(0.06) 0.10(0.06) 0.14(0.07) 0.08(0.13) 0.28(0.29) 0.22(0.09) 0.14(0.23) 0.16(0.10) 0.14(0.09) 0.19(0.11) 0.16(0.16) 0.15(0.07) 0.25(0.15) 0.15(0.11) 0.17(0.10) 0.14(0.05) 0.14(0.05) 0.16(0.05) 0.14(0.05) 0.14(0.07) 0.14(0.02) 0.18(0.04) 0.16(0.12) 0.15(0.04) 0.14(0.06) 0.15(0.06) 0.17(0.13) 0.17(0.09) 0.15(0.04) 0.16(0.10) 0.14(0.03) 0.14(0.13) 0.14(0.05) 0.17(0.06) 0.14(0.04) 0.18(0.05) 0.19(0.06) 0.14(0.11) 0.14(0.05) 0.20(0.10) 0.16(0.05) 0.20(0.05) 0.38(0.20) 0.49(0.12) 0.48(0.11) 0.43(0.07) 0.49(0.14) 0.52(0.06) 0.47(0.09) 0.52(0.11) 0.64(0.14) 0.59(0.07) 0.60(0.09) 0.58(0.03) 0.63(0.06) 0.64(0.08) 0.62(0.05) 0.59(0.10) 0.58(0.04) 0.60(0.05) 0.61(0.07) 0.62(0.06) 0.66(0.07) 0.65(0.11) 0.62(0.09) 0.74(0.16) 0.72(0.10) 0.83(0.18) 0.81(0.12) 0.80(0.03) 0.72(0.30) 0.87(0.25) 1.00(0.30) 0.87(0.24) 0.90(0.04) 0.90(0.05) 0.95(0.09) 0.98(0.11) 1.06(0.13) 1.04(0.05) 1.06(0.06) 0.98(0.15) 1.03(0.09) 0.78(0.29) 0.90(0.14) 1.09(0.20) 0.99(0.21) 0.95(0.05) 1.07(0.18) 1.11(0.10) 1.06(0.09) 1.10(0.11) 1.14(0.07) 1.16(0.04) 1.21(0.10) 1.15(0.15) 1.23(0.10) 1.28(0.07) 1.28(0.09) 1.35(0.08) 1.42(0.21) 1.39(0.08) 1.37(0.10)
++ Max displacement in automask = 1.42 (mm) at sub-brick 147
++ Max delta displ  in automask = 0.30 (mm) at sub-brick 119
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.FT.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE FT_anat_ns+tlrc::WARP_DATA -I FT_anat_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base FT_anat_ns+tlrc -input pb01.FT.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 2.5 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./pb01.FT.r03.tshift+orig.HEAD
++ Base dataset:   ./FT_anat_ns+tlrc.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -4.103  -22.599   18.936
 +  shift search range is +/- =   51.360   60.990   48.150
 +                                  8.0%    37.1%    39.3%
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 5.2
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dAllineate -base FT_anat_ns+tlrc -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 2.5 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =   -3.376  -34.901   20.689
 +  shift search range is +/- =   51.360   60.990   48.150
 +                                  6.6%    57.2%    43.0%
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.9
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb02.FT.r01.volreg
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.FT.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb02.FT.r02.volreg
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.FT.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb02.FT.r03.volreg
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.FT.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE FT_anat_ns+tlrc::WARP_DATA -I FT_anat_al_junk_mat.aff12.1D -I
3dAllineate -base FT_anat_ns+tlrc -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2.5 -prefix final_epi_vr_base_min_outlier
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./FT_anat_ns+tlrc.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -4.114  -22.656   18.876
 +  shift search range is +/- =   51.360   60.990   48.150
 +                                  8.0%    37.1%    39.2%
++ master dataset for output = base
++ changing output grid spacing to 2.5000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+tlrc.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.1
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dcopy FT_anat_ns+tlrc anat_final.FT
++ 3dcopy: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+tlrc -allcostX -input anat_final.FT+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.FT+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+tlrc.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(12.9425)'
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -0.114    3.295  -11.774
 +  shift search range is +/- =   63.398   67.410   49.755
 +                                  0.2%     4.9%    23.7%
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.213378
   sp   = 0.324683
   mi   = 3.46655
   crM  = 0.0985086
   nmi  = 0.871281
   je   = 3.46655
   hel  = -0.100031
   crA  = 0.313885
   crU  = 0.3178
   lss  = 0.786622
   lpc  = 0.318689
   lpa  = 0.681311
   lpc+ = 0.523004
   lpa+ = 0.885627
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dTstat -mean -prefix rm.signal.vreg.r01 pb02.FT.r01.volreg+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.vreg.r01+tlrc.BRIK
3dDetrend -polort 3 -prefix rm.noise.det -overwrite pb02.FT.r01.volreg+tlrc
++ 3dDetrend: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
3dTstat -stdev -prefix rm.noise.vreg.r01 rm.noise.det+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.vreg.r01+tlrc.BRIK
3dcalc -a rm.signal.vreg.r01+tlrc -b rm.noise.vreg.r01+tlrc -c mask_epi_extents+tlrc -expr c*a/b -prefix TSNR.vreg.r01.FT
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.vreg.r01.FT+tlrc.BRIK
3dAllineate -source FT_anat+orig -master anat_final.FT+tlrc -final wsinc5 -1Dmatrix_apply warp.anat.Xat.1D -prefix anat_w_skull_warped
++ 3dAllineate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Zhark the Registrator
++ -1Dmatrix_apply: converting input 3x4 array to 1 row of 12 numbers
++ Source dataset: ./FT_anat+orig.HEAD
++ Base dataset:   (not given)
++ Loading datasets into memory
 +        -cmass x y z shifts =    0.000    0.000    0.000
 +  shift search range is +/- =   55.854   76.739   76.739
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ wsinc5 interpolation setup:
 +   taper function  = Min sidelobe 3 term
 +   taper cut point = 0.000
 +   window radius   = 5 voxels
 +   window shape    = Cubical
 +   The above can be altered via the AFNI_WSINC5_* environment variables.
 +  (To avoid this message, 'setenv AFNI_WSINC5_SILENT YES'.)
 +   wsinc5 CUBE(5) mask has 1000 points
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.1
++ ###########################################################
@radial_correlate -nfirst 0 -polort 3 -do_clean yes -rdir radcor.pb02.volreg pb02.FT.r01.volreg+tlrc.HEAD pb02.FT.r02.volreg+tlrc.HEAD pb02.FT.r03.volreg+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.2 s
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.2 s
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.2 s
++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
-- detrend -polort 3, new eset = det.r01
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 291840 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 130718 vectors are constant

-- running correlation on dataset pb02.FT.r01.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (167.0 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r01+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Wrote dataset: ./radcor.20.r01.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
---- done

++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
-- detrend -polort 3, new eset = det.r02
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 291840 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 131016 vectors are constant

-- running correlation on dataset pb02.FT.r02.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (167.0 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r02+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Wrote dataset: ./radcor.20.r02.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
---- done

++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
-- detrend -polort 3, new eset = det.r03
++ 3dTproject: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 4 polynomials -- 4 polort regressors
++ 150 retained time points MINUS 4 regressors ==> 146 D.O.F. left
++ no -mask option ==> processing all 291840 voxels in dataset
[7m*+ WARNING:[0m 3dTproject input data :: 131111 vectors are constant

-- running correlation on dataset pb02.FT.r03.volreg+tlrc.HEAD ...

++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (167.0 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.r03+tlrc.BRIK

++ 3dTcorrelate: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Wrote dataset: ./radcor.20.r03.corr+tlrc.BRIK
++ 3dbucket: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
---- done

++ have do_clean, cleaning up...

foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb03.FT.r01.blur pb02.FT.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (83.5 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./pb03.FT.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb03.FT.r02.blur pb02.FT.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (83.5 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./pb03.FT.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 4.0 -doall -prefix pb03.FT.r03.blur pb02.FT.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (83.5 MB)
......................................................................................................................................................
-- Wrote edited dataset: ./pb03.FT.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -prefix rm.mask_r01 pb03.FT.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.FT.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 664.905334
 + Used gradual clip level = 539.685303 .. 732.629089
 + Number voxels above clip level = 70148
 + Clustering voxels ...
 + Largest cluster has 69978 voxels
 + Clustering voxels ...
 + Largest cluster has 69941 voxels
 + Filled    65 voxels in small holes; now have 70006 voxels
 + Clustering voxels ...
 + Largest cluster has 70006 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 221834 voxels
 + Mask now has 70006 voxels
++ 70006 voxels in the mask [out of 291840: 23.99%]
++ first   5 x-planes are zero [from R]
++ last    6 x-planes are zero [from L]
++ first   6 y-planes are zero [from A]
++ last    6 y-planes are zero [from P]
++ first  17 z-planes are zero [from I]
++ last    7 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r02 pb03.FT.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.FT.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 662.314270
 + Used gradual clip level = 545.806702 .. 729.068848
 + Number voxels above clip level = 70312
 + Clustering voxels ...
 + Largest cluster has 70160 voxels
 + Clustering voxels ...
 + Largest cluster has 70128 voxels
 + Filled    81 voxels in small holes; now have 70209 voxels
 + Clustering voxels ...
 + Largest cluster has 70209 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 221631 voxels
 + Mask now has 70209 voxels
++ 70209 voxels in the mask [out of 291840: 24.06%]
++ first   5 x-planes are zero [from R]
++ last    6 x-planes are zero [from L]
++ first   6 y-planes are zero [from A]
++ last    6 y-planes are zero [from P]
++ first  17 z-planes are zero [from I]
++ last    7 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -prefix rm.mask_r03 pb03.FT.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.FT.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 663.022278
 + Used gradual clip level = 551.934448 .. 728.947754
 + Number voxels above clip level = 70383
 + Clustering voxels ...
 + Largest cluster has 70252 voxels
 + Clustering voxels ...
 + Largest cluster has 70213 voxels
 + Filled    78 voxels in small holes; now have 70291 voxels
 + Clustering voxels ...
 + Largest cluster has 70291 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 221549 voxels
 + Mask now has 70291 voxels
++ 70291 voxels in the mask [out of 291840: 24.09%]
++ first   5 x-planes are zero [from R]
++ last    6 x-planes are zero [from L]
++ first   6 y-planes are zero [from A]
++ last    6 y-planes are zero [from P]
++ first  17 z-planes are zero [from I]
++ last    7 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.FT
++ processing 3 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 70463 survived, 221377 were zero
++ writing result full_mask.FT...
3dresample -master full_mask.FT+tlrc -input FT_anat_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.FT
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 91405 survived, 200435 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.FT...
3dmask_tool -input full_mask.FT+tlrc mask_anat.FT+tlrc -inter -prefix mask_epi_anat.FT
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 24754 clipped, 68557 survived, 198529 were zero
++ writing result mask_epi_anat.FT...
3dABoverlap -no_automask full_mask.FT+tlrc mask_anat.FT+tlrc
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
#A=./full_mask.FT+tlrc.BRIK  B=./mask_anat.FT+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
70463        91405        93311        68557        1906         22848         2.7050     24.9964     1.0025     0.9891     1.6803
3ddot -dodice full_mask.FT+tlrc mask_anat.FT+tlrc
tee out.mask_ae_dice.txt
0.847073	
3dresample -master full_mask.FT+tlrc -prefix ./rm.resam.group -input /home/jlefortb/abin/TT_N27+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 95647 survived, 196193 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
3ddot -dodice mask_anat.FT+tlrc mask_group+tlrc
tee out.mask_at_dice.txt
0.94764	
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb03.FT.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb03.FT.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.FT.r01.scale
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.FT.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb03.FT.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb03.FT.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.FT.r02.scale
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.FT.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb03.FT.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb03.FT.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.FT.r03.scale
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.FT.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile motion_demean.1D -set_nruns 3 -split_into_pad_runs mot_demean
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_FT
total number of censored TRs (simple form) = 6
1deval -a motion_FT_censor.1D -b outcount_FT_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_FT_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb04.FT.r01.scale+tlrc.HEAD pb04.FT.r02.scale+tlrc.HEAD pb04.FT.r03.scale+tlrc.HEAD -censor censor_FT_combined_2.1D -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_demean.r02.1D mot_demean_r02 -ortvec mot_demean.r03.1D mot_demean_r03 -polort 3 -num_stimts 2 -stim_times 1 stimuli/AV1_vis.txt BLOCK(20,1) -stim_label 1 vis -stim_times 2 stimuli/AV2_aud.txt BLOCK(20,1) -stim_label 2 aud -jobs 2 -gltsym SYM: vis -aud -glt_label 1 V-A -gltsym SYM: 0.5*vis +0.5*aud -glt_label 2 mean.VA -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -errts errts.FT -bucket stats.FT
++ 3dDeconvolve extending num_stimts from 2 to 20 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb04.FT.r01.scale+tlrc.HEAD pb04.FT.r02.scale+tlrc.HEAD pb04.FT.r03.scale+tlrc.HEAD
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 161312 voxels (out of 291840 = 55.3%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ ** -stim_times NOTE ** guessing GLOBAL times if 1 time per line; LOCAL otherwise
++ ** GUESSED ** -stim_times 1 using LOCAL times
++ ** GUESSED ** -stim_times 2 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: vis -aud':
   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: 0.5*vis +0.5*aud':
          0          0          0          0          0          0          0          0          0          0          0          0        0.5        0.5          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0 
 
++ Number of time points: 450 (before censor) ; 444 (after)
 + Number of parameters:  32 [30 baseline ; 2 signal]
++ total shared memory needed = 540,487,680 bytes (about 540 million)
++ mmap() memory allocated: 540,487,680 bytes (about 540 million)
++ Memory required for output bricks = 540,487,680 bytes (about 540 million)
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb04.FT.r01.scale+tlrc.HEAD pb04.FT.r02.scale+tlrc.HEAD pb04.FT.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.FT_REML -Rvar stats.FT_REMLvar \
 -Rerrts errts.FT_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (444x32):  4.8831  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (444x2):  1.00007  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (444x30):  4.87519  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (444x18):  3.44695  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (444x12):  1.03493  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.96742e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.45 s
++ Voxels in dataset: 291840
++ Voxels per job:    145920
++ Job #1: processing voxels 145920 to 291839; elapsed time=1.652
++ Job #0: processing voxels 0 to 145919; elapsed time=1.662
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0123456789.
++ Job #0 waiting for children to finish; elapsed time=23.151
++ Job #1 finished; elapsed time=23.162
++ Job #0 now finishing up; elapsed time=23.170
++ Smallest FDR q [0 Full_Fstat] = 1.28467e-14
++ Smallest FDR q [2 vis#0_Tstat] = 2.01495e-14
++ Smallest FDR q [3 vis_Fstat] = 2.01501e-14
++ Smallest FDR q [5 aud#0_Tstat] = 2.01819e-14
++ Smallest FDR q [6 aud_Fstat] = 2.01807e-14
++ Smallest FDR q [8 V-A_GLT#0_Tstat] = 3.54098e-13
++ Smallest FDR q [9 V-A_GLT_Fstat] = 3.54088e-13
++ Smallest FDR q [11 mean.VA_GLT#0_Tstat] = 1.68944e-14
++ Smallest FDR q [12 mean.VA_GLT_Fstat] = 1.68938e-14
++ Wrote bucket dataset into ./stats.FT+tlrc.BRIK
 + created 9 FDR curves in bucket header
++ Wrote 3D+time dataset into ./errts.FT+tlrc.BRIK
++ Program finished; elapsed time=29.603
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  medium:      -0.612       0.000  (12 vs. 13)  vis#0  vs.  aud#0

1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt

initial DF                   : 450 : 100.0%

DF used for regs of interest :   2 :   0.4%
DF used for censoring        :   6 :   1.3%
DF used for polort           :  12 :   2.7%
DF used for motion           :  18 :   4.0%
total DF used                :  38 :   8.4%

final DF                     : 412 :  91.6%

3dTcat -prefix all_runs.FT pb04.FT.r01.scale+tlrc.HEAD pb04.FT.r02.scale+tlrc.HEAD pb04.FT.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ elapsed time = 0.6 s
3dTstat -mean -prefix rm.signal.all all_runs.FT+tlrc[0..40,45..264,267..449]
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.FT+tlrc[0..40,45..264,267..449]
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -expr a/b -prefix TSNR.FT
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.FT+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.FT+tlrc
++ 3dTnorm: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.FT+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
+++ 70463 voxels survive the mask
3dTstat -sos -prefix - mean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.06386
3dmaskave -quiet -mask full_mask.FT+tlrc errts.FT+tlrc
++ 3dmaskave: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
+++ 70463 voxels survive the mask
3dTcorr1D -prefix corr_brain errts.FT+tlrc mean.errts.1D
++ 3dTcorr1D: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
 + reading dataset file errts.FT+tlrc
 + reading 1D file mean.errts.1D
 + loading dataset ./errts.FT+tlrc.BRIK into memory
++ Start correlations: 291840 voxels X 1 time series(450); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 130315 voxels skipped because were constant in time
++ Wrote dataset: ./corr_brain+tlrc.BRIK
3dcalc -a all_runs.FT+tlrc -b errts.FT+tlrc -expr a-b -prefix fitts.FT
++ 3dcalc: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./fitts.FT+tlrc.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1d_tool.py -infile X.nocensor.xmat.1D -write_xstim X.stim.xmat.1D
3dTstat -sum -prefix sum_ideal.1D X.stim.xmat.1D
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
touch blur_est.FT.1D
mkdir files_ACF
touch blur.epits.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..40,45..149 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.FT+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r01.1D all_runs.FT+tlrc[0..40,45..149]
++ 3dFWHMx: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68557
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.19 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r01.1D
++ 1dplot: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..264,267..299 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.FT+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r02.1D all_runs.FT+tlrc[150..264,267..299]
++ 3dFWHMx: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68557
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.45 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r02.1D
++ 1dplot: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.FT+tlrc -ACF files_ACF/out.3dFWHMx.ACF.epits.r03.1D all_runs.FT+tlrc[300..449]
++ 3dFWHMx: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68557
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.20 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r03.1D
++ 1dplot: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits FWHM blurs: 0 0 0 0
average epits FWHM blurs: 0 0 0 0
echo 0 0 0 0   # epits FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits ACF blurs: 0.642129 3.12663 12.0543 8.59629
average epits ACF blurs: 0.642129 3.12663 12.0543 8.59629
echo 0.642129 3.12663 12.0543 8.59629   # epits ACF blur estimates
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..40,45..149 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.FT+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.FT+tlrc[0..40,45..149]
++ 3dFWHMx: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68557
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 16.81 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..264,267..299 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.FT+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.FT+tlrc[150..264,267..299]
++ 3dFWHMx: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68557
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 17.07 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask mask_epi_anat.FT+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.FT+tlrc[300..449]
++ 3dFWHMx: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68557
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 16.81 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_23.0.02 (Jan 24 2023) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.658105 3.12516 10.1918 8.30241
average errts ACF blurs: 0.658105 3.12516 10.1918 8.30241
echo 0.658105 3.12516 10.1918 8.30241   # errts ACF blur estimates
gen_epi_review.py -script @epi_review.FT -dsets pb00.FT.r01.tcat+orig.HEAD pb00.FT.r02.tcat+orig.HEAD pb00.FT.r03.tcat+orig.HEAD
cat
cat out.ap_uvars.txt
afni_python_wrapper.py -eval data_file_to_json()
gen_ss_review_scripts.py -exit0 -init_uvars_json out.ap_uvars.json -write_uvars_json out.ss_review_uvars.json
** SVWD: invalid <noname> variable: tlrc_base
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.epi.1.r01+tlrc.BRIK.gz rm.epi.1.r01+tlrc.HEAD rm.epi.1.r02+tlrc.BRIK.gz rm.epi.1.r02+tlrc.HEAD rm.epi.1.r03+tlrc.BRIK.gz rm.epi.1.r03+tlrc.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+tlrc.BRIK.gz rm.epi.mean+tlrc.HEAD rm.epi.min.r01+tlrc.BRIK.gz rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.BRIK.gz rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.BRIK.gz rm.epi.min.r03+tlrc.HEAD rm.epi.nomask.r01+tlrc.BRIK rm.epi.nomask.r01+tlrc.HEAD rm.epi.nomask.r02+tlrc.BRIK rm.epi.nomask.r02+tlrc.HEAD rm.epi.nomask.r03+tlrc.BRIK rm.epi.nomask.r03+tlrc.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK.gz rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK.gz rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK.gz rm.mask_r03+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.noise.det+tlrc.BRIK rm.noise.det+tlrc.HEAD rm.noise.vreg.r01+tlrc.BRIK rm.noise.vreg.r01+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.resam.anat+tlrc.BRIK rm.resam.anat+tlrc.HEAD rm.resam.group+tlrc.BRIK rm.resam.group+tlrc.HEAD rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD rm.signal.vreg.r01+tlrc.BRIK rm.signal.vreg.r01+tlrc.HEAD
if ( -e @ss_review_basic ) then
./@ss_review_basic
tee out.ss_review.FT.txt

subject ID                : FT
AFNI version              : AFNI_23.0.02
AFNI package              : linux_openmp_64
TR                        : 2.0
TRs removed (per run)     : 2
num stim classes provided : 2
final anatomy dset        : anat_final.FT+tlrc.HEAD
final stats dset          : stats.FT+tlrc.HEAD
orig voxel counts         : 80	80	33
orig voxel resolution     : 2.750000	2.750000	3.000000
orig volume center        : -4.037201	-14.153702	30.349419
final voxel resolution    : 2.500000	2.500000	2.500000

motion limit              : 0.3
num TRs above mot limit   : 3
average motion (per TR)   : 0.0755233
average censored motion   : 0.0691518
max motion displacement   : 1.66201
max censored displacement : 1.02929
outlier limit             : 0.05
average outlier frac (TR) : 0.00276734
num TRs above out limit   : 2
flip guess                : NO_FLIP

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 146 148 150
num TRs per run (censored): 4 2 0
fraction censored per run : 0.0266667 0.0133333 0
TRs total (uncensored)    : 450
TRs total                 : 444
degrees of freedom used   : 32
degrees of freedom left   : 412
final DF fraction         : 0.915556

TRs censored              : 6
censor fraction           : 0.013333
num regs of interest      : 2
num TRs per stim (orig)   : 240 239
num TRs censored per stim : 6 0
fraction TRs censored     : 0.025 0.000
ave mot per sresp (orig)  : 0.078370 0.071256
ave mot per sresp (cens)  : 0.066435 0.071256

TSNR average              : 229.354
global correlation (GCOR) : 0.06386
anat/EPI mask Dice coef   : 0.847073
anat/templ mask Dice coef : 0.94764
maximum F-stat (masked)   : 999.779
blur estimates (ACF)      : 0.658105 3.12516 10.1918
blur estimates (FWHM)     : 0 0 0

endif
cd ..
echo execution finished: `date`
date
execution finished: Thu Feb  2 11:14:01 AM CET 2023
